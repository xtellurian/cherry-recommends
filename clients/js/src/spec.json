{
  "openapi": "3.0.1",
  "info": {
    "title": "Cherry Recommends API",
    "version": "v1"
  },
  "paths": {
    "/api/ApiKeys/exchange": {
      "post": {
        "tags": [
          "ApiKeys"
        ],
        "summary": "Exchange an API key for a token.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyExchangeRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyExchangeRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyExchangeRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyExchangeResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/ApiKeys/create": {
      "post": {
        "tags": [
          "ApiKeys"
        ],
        "summary": "Creates an API key.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiKeyDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiKeyDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiKeyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateApiKeyResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/ApiKeys": {
      "post": {
        "tags": [
          "ApiKeys"
        ],
        "summary": "Creates an API key.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiKeyDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiKeyDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiKeyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateApiKeyResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ApiKeys"
        ],
        "summary": "Lists the names of all API Keys.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyDtoPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/ApiKeys/{id}": {
      "delete": {
        "tags": [
          "ApiKeys"
        ],
        "summary": "Creates an API key.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/AzureSingleClassClassifier/{id}/invoke": {
      "post": {
        "tags": [
          "AzureSingleClassClassifier"
        ],
        "summary": "Invoke a model with some payload.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AzureMLModelInput"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AzureMLModelInput"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AzureMLModelInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AzureMLClassifierOutput"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Businesses": {
      "post": {
        "tags": [
          "Businesses"
        ],
        "summary": "Adds a new Business.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBusinessDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBusinessDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBusinessDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Business"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Businesses"
        ],
        "summary": "Returned a paginated list of items for this resource.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "term",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weeksAgo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Businesses/{id}/Members": {
      "get": {
        "tags": [
          "Businesses"
        ],
        "summary": "Gets the Customers that are members of a Business.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "term",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weeksAgo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Businesses"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMemberDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMemberDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddMemberDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessMembership"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Businesses/{id}/Members/{customerId}": {
      "delete": {
        "tags": [
          "Businesses"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Businesses/{id}/events": {
      "get": {
        "tags": [
          "Businesses"
        ],
        "summary": "Returns a list of events for a given business.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Businesses/{id}/Metrics": {
      "get": {
        "tags": [
          "Businesses"
        ],
        "summary": "Returns a list of metrics available for a business.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Metric"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Businesses/{id}/Metrics/{metricCommonId}": {
      "get": {
        "tags": [
          "Businesses"
        ],
        "summary": "Returns the value set in the metric.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metricCommonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessMetricValue"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Businesses/{id}": {
      "get": {
        "tags": [
          "Businesses"
        ],
        "summary": "Returns the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Business"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Businesses"
        ],
        "summary": "Deletes the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Businesses/{id}/name": {
      "post": {
        "tags": [
          "Businesses"
        ],
        "summary": "Update the name of this the resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Business"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Businesses/{id}/Properties": {
      "get": {
        "tags": [
          "Businesses"
        ],
        "summary": "Get the properties associated with this resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Businesses"
        ],
        "summary": "Set the properties associated with this resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Businesses/{id}/recommendations": {
      "get": {
        "tags": [
          "BusinessRecommendations"
        ],
        "summary": "Gets recent recommendations for a business.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsRecommendationPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/TrackedUsers/{id}/features": {
      "get": {
        "tags": [
          "CustomerMetrics"
        ],
        "summary": "Returns a list of metrics available for a customer.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Metric"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customers/{id}/features": {
      "get": {
        "tags": [
          "CustomerMetrics"
        ],
        "summary": "Returns a list of metrics available for a customer.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Metric"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/TrackedUsers/{id}/Metrics": {
      "get": {
        "tags": [
          "CustomerMetrics"
        ],
        "summary": "Returns a list of metrics available for a customer.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Metric"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customers/{id}/Metrics": {
      "get": {
        "tags": [
          "CustomerMetrics"
        ],
        "summary": "Returns a list of metrics available for a customer.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Metric"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/TrackedUsers/{id}/features/{metricCommonId}": {
      "post": {
        "tags": [
          "CustomerMetrics"
        ],
        "summary": "Creates a new set of metric values on a user. You probably shouldn't set this manually.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metricCommonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "forceIncrementVersion",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerMetric"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerMetric"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerMetric"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricCustomerMetric"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "CustomerMetrics"
        ],
        "summary": "Returns the value set in the metric.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metricCommonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricCustomerMetric"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customers/{id}/features/{metricCommonId}": {
      "post": {
        "tags": [
          "CustomerMetrics"
        ],
        "summary": "Creates a new set of metric values on a user. You probably shouldn't set this manually.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metricCommonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "forceIncrementVersion",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerMetric"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerMetric"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerMetric"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricCustomerMetric"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "CustomerMetrics"
        ],
        "summary": "Returns the value set in the metric.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metricCommonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricCustomerMetric"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/TrackedUsers/{id}/Metrics/{metricCommonId}": {
      "post": {
        "tags": [
          "CustomerMetrics"
        ],
        "summary": "Creates a new set of metric values on a user. You probably shouldn't set this manually.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metricCommonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "forceIncrementVersion",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerMetric"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerMetric"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerMetric"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricCustomerMetric"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "CustomerMetrics"
        ],
        "summary": "Returns the value set in the metric.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metricCommonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricCustomerMetric"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customers/{id}/Metrics/{metricCommonId}": {
      "post": {
        "tags": [
          "CustomerMetrics"
        ],
        "summary": "Creates a new set of metric values on a user. You probably shouldn't set this manually.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metricCommonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "forceIncrementVersion",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerMetric"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerMetric"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerMetric"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricCustomerMetric"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "CustomerMetrics"
        ],
        "summary": "Returns the value set in the metric.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metricCommonId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricCustomerMetric"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/TrackedUsers/{id}/latest-recommendations": {
      "get": {
        "tags": [
          "CustomerRecommendations"
        ],
        "summary": "Gets recent recommendations for a tracked user.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customers/{id}/latest-recommendations": {
      "get": {
        "tags": [
          "CustomerRecommendations"
        ],
        "summary": "Gets recent recommendations for a tracked user.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/TrackedUsers/{id}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "Deletes the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customers/{id}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "Deletes the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/TrackedUsers/{id}/events": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Returns a list of events for a given user.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customers/{id}/events": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Returns a list of events for a given user.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/TrackedUsers/{id}/segments": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Returns a list of segments for a given user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Segment"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customers/{id}/segments": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Returns a list of segments for a given user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Segment"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/TrackedUsers/{id}/properties": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Updates the properties of a customer.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customers/{id}/properties": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Updates the properties of a customer.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/TrackedUsers": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Adds a new Customer.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateCustomerDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateCustomerDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateCustomerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "Creates or updates a set of users with properties.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchCreateOrUpdateCustomersDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchCreateOrUpdateCustomersDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BatchCreateOrUpdateCustomersDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Returned a paginated list of items for this resource.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "term",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weeksAgo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customers": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Adds a new Customer.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateCustomerDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateCustomerDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateCustomerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "Creates or updates a set of users with properties.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchCreateOrUpdateCustomersDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchCreateOrUpdateCustomersDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BatchCreateOrUpdateCustomersDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Returned a paginated list of items for this resource.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "term",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weeksAgo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/TrackedUsers/{id}/name": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Update the name of this the resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customers/{id}/name": {
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Update the name of this the resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/TrackedUsers/{id}/Properties": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get the properties associated with this resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customers/{id}/Properties": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Get the properties associated with this resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/DataSummary/events": {
      "get": {
        "tags": [
          "DataSummary"
        ],
        "summary": "Summarises the events that have been collected.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEventSummary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/DataSummary/events/timeline/{kind}/{eventType}": {
      "get": {
        "tags": [
          "DataSummary"
        ],
        "summary": "Summarises a timeline of event counts each month.",
        "parameters": [
          {
            "name": "kind",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EventKinds"
            }
          },
          {
            "name": "eventType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventCountTimeline"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Environments": {
      "post": {
        "tags": [
          "Environments"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEnvironment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEnvironment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEnvironment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Environment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Environments"
        ],
        "summary": "Returned a paginated list of items for this resource.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Environments/{id}": {
      "get": {
        "tags": [
          "Environments"
        ],
        "summary": "Returns the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Environment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Environments"
        ],
        "summary": "Deletes the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Events": {
      "post": {
        "tags": [
          "Events"
        ],
        "summary": "Stores event data about one or more tracked users.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventLoggingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Events/{id}": {
      "get": {
        "tags": [
          "Events"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerEvent"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/models/generic/{id}/invoke": {
      "post": {
        "tags": [
          "GenericModelInvoker"
        ],
        "summary": "Invoke a model with some payload.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/IntegratedSystems": {
      "post": {
        "tags": [
          "IntegratedSystems"
        ],
        "summary": "Creates a new Integrated System.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIntegratedSystemDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIntegratedSystemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIntegratedSystemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegratedSystem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "IntegratedSystems"
        ],
        "summary": "Returned a paginated list of items for this resource.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "term",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weeksAgo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegratedSystemPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/IntegratedSystems/{id}/webhookreceivers": {
      "post": {
        "tags": [
          "IntegratedSystems"
        ],
        "summary": "Creates a new Segment webhook receiver on an existing integrated system.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "useSharedSecret",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookReceiver"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "IntegratedSystems"
        ],
        "summary": "Returned a paginated list of webhook receivers for the given integrated system.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebhookReceiver"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/IntegratedSystems/{id}": {
      "get": {
        "tags": [
          "IntegratedSystems"
        ],
        "summary": "Returns the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegratedSystem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "IntegratedSystems"
        ],
        "summary": "Deletes the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/IntegratedSystems/{id}/name": {
      "post": {
        "tags": [
          "IntegratedSystems"
        ],
        "summary": "Update the name of this the resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegratedSystem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/IntegratedSystems/{id}/Properties": {
      "get": {
        "tags": [
          "IntegratedSystems"
        ],
        "summary": "Get the properties associated with this resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "IntegratedSystems"
        ],
        "summary": "Set the properties associated with this resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/MetricGenerators": {
      "get": {
        "tags": [
          "MetricGenerators"
        ],
        "summary": "Returned a paginated list of items for this resource.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricGeneratorPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MetricGenerators"
        ],
        "summary": "Creates a new Metric generator",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMetricGenerator"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMetricGenerator"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMetricGenerator"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricGenerator"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/FeatureGenerators": {
      "get": {
        "tags": [
          "MetricGenerators"
        ],
        "summary": "Returned a paginated list of items for this resource.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricGeneratorPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "MetricGenerators"
        ],
        "summary": "Creates a new Metric generator",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMetricGenerator"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMetricGenerator"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMetricGenerator"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricGenerator"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/MetricGenerators/{id}/Trigger": {
      "post": {
        "tags": [
          "MetricGenerators"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricGeneratorRunSummary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/FeatureGenerators/{id}/Trigger": {
      "post": {
        "tags": [
          "MetricGenerators"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricGeneratorRunSummary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/MetricGenerators/{id}": {
      "get": {
        "tags": [
          "MetricGenerators"
        ],
        "summary": "Returns the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricGenerator"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MetricGenerators"
        ],
        "summary": "Deletes the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/FeatureGenerators/{id}": {
      "get": {
        "tags": [
          "MetricGenerators"
        ],
        "summary": "Returns the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricGenerator"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MetricGenerators"
        ],
        "summary": "Deletes the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Features": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Returned a paginated list of items for this resource.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "term",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weeksAgo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Metrics"
        ],
        "summary": "Creates a new generic Metric that can used on any Customer.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMetric"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMetric"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMetric"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metric"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Metrics": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Returned a paginated list of items for this resource.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "term",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weeksAgo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Metrics"
        ],
        "summary": "Creates a new generic Metric that can used on any Customer.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMetric"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMetric"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMetric"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metric"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Features/{id}/TrackedUsers": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Get's the Customers associated with a Metric.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Metrics/{id}/TrackedUsers": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Get's the Customers associated with a Metric.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Features/{id}/Customers": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Get's the Customers associated with a Metric.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Metrics/{id}/Customers": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Get's the Customers associated with a Metric.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Features/{id}/Generators": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Get's the Generators associated with the Feature.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricGeneratorPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Metrics/{id}/Generators": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Get's the Generators associated with the Feature.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricGeneratorPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Features/{id}/TrackedUserFeatures": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Get's the latest Customer Metrics(values) for a Metric.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricCustomerMetricPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Metrics/{id}/TrackedUserFeatures": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Get's the latest Customer Metrics(values) for a Metric.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricCustomerMetricPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Features/{id}/CustomerMetrics": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Get's the latest Customer Metrics(values) for a Metric.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricCustomerMetricPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Metrics/{id}/CustomerMetrics": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Get's the latest Customer Metrics(values) for a Metric.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricCustomerMetricPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Features/{id}/AggregateMetricValuesNumeric": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerMetricWeeklyNumericAggregate"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Metrics/{id}/AggregateMetricValuesNumeric": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerMetricWeeklyNumericAggregate"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Features/{id}/AggregateMetricValuesString": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerMetricWeeklyStringAggregate"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Metrics/{id}/AggregateMetricValuesString": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerMetricWeeklyStringAggregate"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Features/{id}/NumericMetricBinValues": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "binCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MetricDailyBinValueNumeric"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Metrics/{id}/NumericMetricBinValues": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "binCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MetricDailyBinValueNumeric"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Features/{id}/CategoricalMetricBinValues": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MetricDailyBinValueString"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Metrics/{id}/CategoricalMetricBinValues": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MetricDailyBinValueString"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Features/{id}/Destinations": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MetricDestinationBase"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricDestinationBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Metrics/{id}/Destinations": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MetricDestinationBase"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricDestinationBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Features/{id}/ExportCustomers": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Metrics/{id}/ExportCustomers": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Features/{id}/Destinations/{destinationId}": {
      "delete": {
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destinationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricDestinationBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Metrics/{id}/Destinations/{destinationId}": {
      "delete": {
        "tags": [
          "Metrics"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destinationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricDestinationBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Features/{id}": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Returns the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metric"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Metrics"
        ],
        "summary": "Deletes the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Metrics/{id}": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Returns the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metric"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Metrics"
        ],
        "summary": "Deletes the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Features/{id}/name": {
      "post": {
        "tags": [
          "Metrics"
        ],
        "summary": "Update the name of this the resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metric"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Metrics/{id}/name": {
      "post": {
        "tags": [
          "Metrics"
        ],
        "summary": "Update the name of this the resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Metric"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Features/{id}/Properties": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Get the properties associated with this resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Metrics"
        ],
        "summary": "Set the properties associated with this resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Metrics/{id}/Properties": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "Get the properties associated with this resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Metrics"
        ],
        "summary": "Set the properties associated with this resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/ModelRegistrations": {
      "post": {
        "tags": [
          "ModelRegistrations"
        ],
        "summary": "Register a new model.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterNewModelDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterNewModelDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterNewModelDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelRegistration"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ModelRegistrations"
        ],
        "summary": "Returned a paginated list of items for this resource.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelRegistrationPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/ModelRegistrations/{id}": {
      "get": {
        "tags": [
          "ModelRegistrations"
        ],
        "summary": "Returns the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelRegistration"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ModelRegistrations"
        ],
        "summary": "Deletes the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Parameters": {
      "post": {
        "tags": [
          "Parameters"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParameter"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParameter"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParameter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parameter"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Parameters"
        ],
        "summary": "Returned a paginated list of items for this resource.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "term",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weeksAgo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParameterPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Parameters/{id}": {
      "get": {
        "tags": [
          "Parameters"
        ],
        "summary": "Returns the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parameter"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Parameters"
        ],
        "summary": "Deletes the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Parameters/{id}/name": {
      "post": {
        "tags": [
          "Parameters"
        ],
        "summary": "Update the name of this the resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parameter"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Parameters/{id}/Properties": {
      "get": {
        "tags": [
          "Parameters"
        ],
        "summary": "Get the properties associated with this resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Parameters"
        ],
        "summary": "Set the properties associated with this resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ParameterSetRecommenders": {
      "post": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParameterSetRecommender"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParameterSetRecommender"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateParameterSetRecommender"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParameterSetRecommender"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "summary": "Returned a paginated list of items for this resource.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "term",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weeksAgo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParameterSetRecommenderPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ParameterSetRecommenders/{id}/ModelRegistration": {
      "post": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LinkModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelRegistration"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelRegistration"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ParameterSetRecommenders/{id}/Statistics": {
      "get": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "summary": "Get summary statistics about the recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommenderStatistics"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ParameterSetRecommenders/{id}/invoke": {
      "post": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "summary": "Invoke a model with some payload. Id is the recommender Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelInputDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelInputDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModelInputDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParameterSetRecommendationDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ParameterSetRecommenders/{id}/recommendations": {
      "get": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "summary": "Get the latest recommendations made by a recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParameterSetRecommendationPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ParameterSetRecommenders/{id}/InvokationLogs": {
      "get": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvokationLogEntryPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ParameterSetRecommenders/{id}/ErrorHandling": {
      "post": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecommenderErrorHandling"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RecommenderErrorHandling"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RecommenderErrorHandling"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommenderErrorHandling"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ParameterSetRecommenders/{id}/Settings": {
      "post": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecommenderSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RecommenderSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RecommenderSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommenderSettings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommenderSettings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ParameterSetRecommenders/{id}/Arguments": {
      "get": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecommenderArgument"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateOrUpdateRecommenderArgument"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateOrUpdateRecommenderArgument"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateOrUpdateRecommenderArgument"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecommenderArgument"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ParameterSetRecommenders/{id}/Destinations": {
      "get": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecommendationDestinationBase"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationDestinationBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ParameterSetRecommenders/{id}/Destinations/{destinationId}": {
      "delete": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destinationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommenderEntityBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ParameterSetRecommenders/{id}/TriggerCollection": {
      "get": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggerCollection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetTriggersDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetTriggersDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetTriggersDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggerCollection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ParameterSetRecommenders/{id}/LearningFeatures": {
      "get": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Metric"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetLearningMetrics"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetLearningMetrics"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetLearningMetrics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Metric"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ParameterSetRecommenders/{id}/LearningMetrics": {
      "get": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Metric"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetLearningMetrics"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetLearningMetrics"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetLearningMetrics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Metric"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ParameterSetRecommenders/{id}/ReportImage": {
      "get": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ParameterSetRecommenders/{id}/Audience": {
      "get": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Audience"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ParameterSetRecommenders/{id}": {
      "get": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "summary": "Returns the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParameterSetRecommender"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "summary": "Deletes the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ParameterSetRecommenders/{id}/name": {
      "post": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "summary": "Update the name of this the resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParameterSetRecommender"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ParameterSetRecommenders/{id}/Properties": {
      "get": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "summary": "Get the properties associated with this resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ParameterSetRecommenders"
        ],
        "summary": "Set the properties associated with this resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Profile/metadata": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Sets metadata for the current logged in user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserMetadata"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserMetadata"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserMetadata"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserMetadata"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMetadata"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMetadata"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Gets metadata for the current logged in user.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserMetadata"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMetadata"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMetadata"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/RecommendableItems": {
      "get": {
        "tags": [
          "Promotions"
        ],
        "summary": "Returned a paginated list of items for this resource.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "term",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weeksAgo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItemPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Promotions"
        ],
        "summary": "Creates a new recommendable promotion.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Promotions": {
      "get": {
        "tags": [
          "Promotions"
        ],
        "summary": "Returned a paginated list of items for this resource.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "term",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weeksAgo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItemPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Promotions"
        ],
        "summary": "Creates a new recommendable promotion.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/RecommendableItems/{id}": {
      "post": {
        "tags": [
          "Promotions"
        ],
        "summary": "Updates a recommendable promotion.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePromotionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePromotionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePromotionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Promotions"
        ],
        "summary": "Returns the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Promotions"
        ],
        "summary": "Deletes the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Promotions/{id}": {
      "post": {
        "tags": [
          "Promotions"
        ],
        "summary": "Updates a recommendable promotion.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePromotionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePromotionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePromotionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Promotions"
        ],
        "summary": "Returns the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Promotions"
        ],
        "summary": "Deletes the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/RecommendableItems/{id}/name": {
      "post": {
        "tags": [
          "Promotions"
        ],
        "summary": "Update the name of this the resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Promotions/{id}/name": {
      "post": {
        "tags": [
          "Promotions"
        ],
        "summary": "Update the name of this the resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/RecommendableItems/{id}/Properties": {
      "get": {
        "tags": [
          "Promotions"
        ],
        "summary": "Get the properties associated with this resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Promotions"
        ],
        "summary": "Set the properties associated with this resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Promotions/{id}/Properties": {
      "get": {
        "tags": [
          "Promotions"
        ],
        "summary": "Get the properties associated with this resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Promotions"
        ],
        "summary": "Set the properties associated with this resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Returns the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsRecommender"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Deletes the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Returns the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsRecommender"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Deletes the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders": {
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Creates a new promotions recommender.",
        "parameters": [
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionsRecommender"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionsRecommender"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionsRecommender"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsRecommender"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Returned a paginated list of items for this resource.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "term",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weeksAgo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsRecommenderPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders": {
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Creates a new promotions recommender.",
        "parameters": [
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionsRecommender"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionsRecommender"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionsRecommender"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsRecommender"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Returned a paginated list of items for this resource.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "term",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weeksAgo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsRecommenderPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/DefaultItem": {
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Sets the baseline promotion for the recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaselinePromotionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BaselinePromotionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BaselinePromotionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Gets the baseline promotion for the recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/DefaultItem": {
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Sets the baseline promotion for the recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaselinePromotionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BaselinePromotionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BaselinePromotionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Gets the baseline promotion for the recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/BaselineItem": {
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Sets the baseline promotion for the recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaselinePromotionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BaselinePromotionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BaselinePromotionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Gets the baseline promotion for the recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/BaselineItem": {
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Sets the baseline promotion for the recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaselinePromotionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BaselinePromotionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BaselinePromotionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Gets the baseline promotion for the recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/BaselinePromotion": {
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Sets the baseline promotion for the recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaselinePromotionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BaselinePromotionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BaselinePromotionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Gets the baseline promotion for the recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/BaselinePromotion": {
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Sets the baseline promotion for the recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaselinePromotionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BaselinePromotionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BaselinePromotionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Gets the baseline promotion for the recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/ModelRegistration": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Get the backing model information.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelRegistration"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/ModelRegistration": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Get the backing model information.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelRegistration"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/Statistics": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Get summary statistics about the recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommenderStatistics"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/Statistics": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Get summary statistics about the recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommenderStatistics"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/invoke": {
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Invoke a model with some input. Id is the recommender Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelInputDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelInputDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModelInputDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionsRecommendationDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/invoke": {
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Invoke a model with some input. Id is the recommender Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelInputDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelInputDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModelInputDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionsRecommendationDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/Recommendations": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Get the latest recommendations made by a recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsRecommendationPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/Recommendations": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Get the latest recommendations made by a recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsRecommendationPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/Items": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Get the promotions associated with a recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItemPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Get the promotions associated with a recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPromotionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPromotionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPromotionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/Items": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Get the promotions associated with a recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItemPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Get the promotions associated with a recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPromotionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPromotionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPromotionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/Promotions": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Get the promotions associated with a recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItemPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Get the promotions associated with a recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPromotionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPromotionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPromotionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/Promotions": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Get the promotions associated with a recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItemPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Get the promotions associated with a recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPromotionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPromotionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPromotionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/Performance/{reportId}": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Get the performance report of a recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsRecommenderPerformanceReport"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/Performance/{reportId}": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Get the performance report of a recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsRecommenderPerformanceReport"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/Items/{itemId}": {
      "delete": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Remove a promotion association with a recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/Items/{itemId}": {
      "delete": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Remove a promotion association with a recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/Promotions/{itemId}": {
      "delete": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Remove a promotion association with a recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/Promotions/{itemId}": {
      "delete": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Remove a promotion association with a recommender.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendableItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/InvokationLogs": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvokationLogEntryPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/InvokationLogs": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvokationLogEntryPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/ErrorHandling": {
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecommenderErrorHandling"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RecommenderErrorHandling"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RecommenderErrorHandling"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommenderErrorHandling"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/ErrorHandling": {
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecommenderErrorHandling"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RecommenderErrorHandling"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RecommenderErrorHandling"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommenderErrorHandling"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/Settings": {
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecommenderSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RecommenderSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RecommenderSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommenderSettings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommenderSettings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/Settings": {
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecommenderSettingsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RecommenderSettingsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RecommenderSettingsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommenderSettings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommenderSettings"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/Arguments": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecommenderArgument"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateOrUpdateRecommenderArgument"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateOrUpdateRecommenderArgument"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateOrUpdateRecommenderArgument"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecommenderArgument"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/Arguments": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecommenderArgument"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateOrUpdateRecommenderArgument"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateOrUpdateRecommenderArgument"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateOrUpdateRecommenderArgument"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecommenderArgument"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/Destinations": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecommendationDestinationBase"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationDestinationBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/Destinations": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecommendationDestinationBase"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDestinationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationDestinationBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/Destinations/{destinationId}": {
      "delete": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destinationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommenderEntityBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/Destinations/{destinationId}": {
      "delete": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destinationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommenderEntityBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/TriggerCollection": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggerCollection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetTriggersDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetTriggersDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetTriggersDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggerCollection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/TriggerCollection": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggerCollection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetTriggersDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetTriggersDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetTriggersDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggerCollection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/LearningFeatures": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Metric"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetLearningMetrics"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetLearningMetrics"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetLearningMetrics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Metric"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/LearningFeatures": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Metric"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetLearningMetrics"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetLearningMetrics"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetLearningMetrics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Metric"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/LearningMetrics": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Metric"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetLearningMetrics"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetLearningMetrics"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetLearningMetrics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Metric"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/LearningMetrics": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Metric"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetLearningMetrics"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetLearningMetrics"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetLearningMetrics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Metric"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/ReportImage": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/ReportImage": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/Audience": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Audience"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/Audience": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Audience"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/name": {
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Update the name of this the resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsRecommender"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/name": {
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Update the name of this the resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemsRecommender"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/ItemsRecommenders/{id}/Properties": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Get the properties associated with this resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Set the properties associated with this resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/recommenders/PromotionsRecommenders/{id}/Properties": {
      "get": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Get the properties associated with this resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PromotionsRecommenders"
        ],
        "summary": "Set the properties associated with this resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "useInternalId",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": { }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/ReactConfig/auth0": {
      "get": {
        "tags": [
          "ReactConfig"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Auth0ReactConfig"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Auth0ReactConfig"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Auth0ReactConfig"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/ReactConfig": {
      "get": {
        "tags": [
          "ReactConfig"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReactConfig"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReactConfig"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReactConfig"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reports": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Returns a list of available reports.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileInformation"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reports/download": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Downloads a file.",
        "parameters": [
          {
            "name": "report",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Segments/{id}/MetricEnrolmentRules": {
      "post": {
        "tags": [
          "SegmentMetricEnrolmentRules"
        ],
        "summary": "Adds a metric based enrolment rule for the Segment.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMetricEnrolmentRuleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMetricEnrolmentRuleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMetricEnrolmentRuleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricEnrolmentRule"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "SegmentMetricEnrolmentRules"
        ],
        "summary": "Gets all metric enrolment rules.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricEnrolmentRulePaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Segments/{id}/MetricEnrolmentRules/{ruleId}": {
      "delete": {
        "tags": [
          "SegmentMetricEnrolmentRules"
        ],
        "summary": "Deletes a Metric Enrolment Rule.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SegmentMetricEnrolmentRules"
        ],
        "summary": "Runs the rule.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "preview",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnrolmentReport"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "SegmentMetricEnrolmentRules"
        ],
        "summary": "Get the rule.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnrolmentRule"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Segments/{id}/MetricEnrolmentRules/{ruleId}/Trigger": {
      "post": {
        "tags": [
          "SegmentMetricEnrolmentRules"
        ],
        "summary": "Triggers the enrolmnet rule to run.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "preview",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Segments": {
      "post": {
        "tags": [
          "Segments"
        ],
        "summary": "Creates a new segment.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSegmentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSegmentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSegmentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Segment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Segments"
        ],
        "summary": "Returned a paginated list of items for this resource.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Segments/{id}/Name": {
      "post": {
        "tags": [
          "Segments"
        ],
        "summary": "Update the name of this resource.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Segment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Segments/{id}/Customers/{customerId}": {
      "post": {
        "tags": [
          "Segments"
        ],
        "summary": "Add a customer to a segment.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Segments"
        ],
        "summary": "Remove a customer from a segment.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Segments/{id}/Customers": {
      "get": {
        "tags": [
          "Segments"
        ],
        "summary": "Gets the Customers that are in a segment.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "term",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "weeksAgo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Segments/{id}": {
      "get": {
        "tags": [
          "Segments"
        ],
        "summary": "Returns the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Segment"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Segments"
        ],
        "summary": "Deletes the resource with this Id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tenants/Status/{name}": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tenants": {
      "post": {
        "tags": [
          "Tenants"
        ],
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTenantDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTenantDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewTenantDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tenants/current": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tenant"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tenants/current/memberships": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoPaginated"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tenants"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantMembershipDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantMembershipDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTenantMembershipDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tenants/hosting": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hosting"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tenants/memberships": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tenant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Webhooks/receivers/{endpointId}": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "An endpoint for a created webhook.",
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddMemberDto": {
        "required": [
          "commonId"
        ],
        "type": "object",
        "properties": {
          "commonId": {
            "maxLength": 99,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\-]+$",
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "useInternalId": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddPromotionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "commonId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AggregateCustomerMetric": {
        "type": "object",
        "properties": {
          "metricId": {
            "type": "integer",
            "format": "int64"
          },
          "metric": {
            "$ref": "#/components/schemas/Metric"
          },
          "aggregationType": {
            "$ref": "#/components/schemas/AggregationTypes"
          },
          "categoricalValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AggregateCustomerMetricDto": {
        "required": [
          "aggregationType",
          "metricId"
        ],
        "type": "object",
        "properties": {
          "metricId": {
            "type": "integer",
            "format": "int64"
          },
          "aggregationType": {
            "$ref": "#/components/schemas/AggregationTypes"
          },
          "categoricalValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AggregateStep": {
        "type": "object",
        "properties": {
          "aggregationType": {
            "$ref": "#/components/schemas/AggregationTypes"
          }
        },
        "additionalProperties": false
      },
      "AggregationTypes": {
        "enum": [
          "sum",
          "mean"
        ],
        "type": "string"
      },
      "ApiKeyDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "lastExchanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "totalExchanges": {
            "type": "integer",
            "format": "int32"
          },
          "apiKeyType": {
            "$ref": "#/components/schemas/ApiKeyTypes"
          }
        },
        "additionalProperties": false
      },
      "ApiKeyDtoPaginated": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiKeyDto"
            },
            "nullable": true,
            "readOnly": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "additionalProperties": false
      },
      "ApiKeyExchangeRequestDto": {
        "required": [
          "apiKey"
        ],
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ApiKeyExchangeResponseDto": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApiKeyTypes": {
        "enum": [
          "server",
          "web"
        ],
        "type": "string"
      },
      "ArgumentTypes": {
        "enum": [
          "numerical",
          "categorical"
        ],
        "type": "string"
      },
      "Audience": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "recommenderId": {
            "type": "integer",
            "format": "int64"
          },
          "recommender": {
            "$ref": "#/components/schemas/RecommenderEntityBase"
          },
          "segments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Segment"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Auth0ReactConfig": {
        "type": "object",
        "properties": {
          "defaultAudience": {
            "type": "string",
            "nullable": true
          },
          "audience": {
            "type": "string",
            "nullable": true
          },
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "clientSecret": {
            "type": "string",
            "nullable": true
          },
          "endpoint": {
            "type": "string",
            "nullable": true
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "managementAudience": {
            "type": "string",
            "nullable": true
          },
          "scope": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AzureMLClassifierOutput": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string",
            "nullable": true
          },
          "correlatorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AzureMLModelInput": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { }
            },
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "commonUserId": {
            "type": "string",
            "nullable": true
          },
          "businessId": {
            "type": "string",
            "nullable": true
          },
          "arguments": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "metrics": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "features": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "parameterBounds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterBounds"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BaselinePromotionDto": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "string",
            "nullable": true
          },
          "promotionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BatchCreateOrUpdateCustomersDto": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateOrUpdateCustomerDto"
            },
            "nullable": true
          },
          "customers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateOrUpdateCustomerDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Bearer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "in": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "schema": {
            "$ref": "#/components/schemas/Schema"
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BenefitType": {
        "enum": [
          "percent",
          "fixed"
        ],
        "type": "string"
      },
      "Business": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "environmentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "commonId": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BusinessMembership": {
        "type": "object",
        "properties": {
          "businessId": {
            "type": "integer",
            "format": "int64"
          },
          "business": {
            "$ref": "#/components/schemas/Business"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "BusinessMetricValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "metricId": {
            "type": "integer",
            "format": "int64"
          },
          "feature": {
            "$ref": "#/components/schemas/Metric"
          },
          "metric": {
            "$ref": "#/components/schemas/Metric"
          },
          "numericValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "stringValue": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true,
            "readOnly": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "discriminator": {
            "type": "string",
            "nullable": true
          },
          "businessId": {
            "type": "integer",
            "format": "int64"
          },
          "business": {
            "$ref": "#/components/schemas/Business"
          }
        },
        "additionalProperties": false
      },
      "BusinessPaginated": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Business"
            },
            "nullable": true,
            "readOnly": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "additionalProperties": false
      },
      "CategoricalParameterBounds": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CategoricalPredicate": {
        "type": "object",
        "properties": {
          "predicateOperator": {
            "$ref": "#/components/schemas/CategoricalPredicateOperators"
          },
          "compareTo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CategoricalPredicateOperators": {
        "enum": [
          "none",
          "equal",
          "notEqual"
        ],
        "type": "string"
      },
      "CheckistItem": {
        "type": "object",
        "properties": {
          "complete": {
            "type": "boolean",
            "nullable": true
          },
          "current": {
            "type": "boolean",
            "nullable": true
          },
          "next": {
            "type": "boolean",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "actionTo": {
            "type": "string",
            "nullable": true
          },
          "actionLabel": {
            "type": "string",
            "nullable": true
          },
          "docsLink": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateApiKeyDto": {
        "required": [
          "apiKeyType",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "apiKeyType": {
            "pattern": "Server|Web",
            "type": "string"
          },
          "scope": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateApiKeyResponseDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "apiKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateBusinessDto": {
        "required": [
          "commonId"
        ],
        "type": "object",
        "properties": {
          "commonId": {
            "maxLength": 99,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\-]+$",
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCustomerMetric": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": { }
        },
        "additionalProperties": false
      },
      "CreateDestinationDto": {
        "required": [
          "destinationType",
          "integratedSystemId"
        ],
        "type": "object",
        "properties": {
          "destinationType": {
            "pattern": "Webhook|SegmentSourceFunction|HubspotContactProperty",
            "type": "string"
          },
          "integratedSystemId": {
            "type": "integer",
            "format": "int64"
          },
          "endpoint": {
            "type": "string",
            "nullable": true
          },
          "propertyName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateEnvironment": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 28,
            "minLength": 3,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateIntegratedSystemDto": {
        "required": [
          "name",
          "systemType"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "systemType": {
            "pattern": "Segment|Hubspot|Custom",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateMetric": {
        "required": [
          "commonId",
          "scope",
          "valueType"
        ],
        "type": "object",
        "properties": {
          "commonId": {
            "maxLength": 99,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\-]+$",
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "valueType": {
            "$ref": "#/components/schemas/MetricValueType"
          },
          "scope": {
            "$ref": "#/components/schemas/MetricScopes"
          }
        },
        "additionalProperties": false
      },
      "CreateMetricEnrolmentRuleDto": {
        "required": [
          "metricId"
        ],
        "type": "object",
        "properties": {
          "metricId": {
            "type": "integer",
            "format": "int64"
          },
          "numericPredicate": {
            "$ref": "#/components/schemas/NumericPredicate"
          },
          "categoricalPredicate": {
            "$ref": "#/components/schemas/CategoricalPredicate"
          }
        },
        "additionalProperties": false
      },
      "CreateMetricGenerator": {
        "required": [
          "generatorType",
          "metricCommonId"
        ],
        "type": "object",
        "properties": {
          "featureCommonId": {
            "type": "string",
            "nullable": true
          },
          "metricCommonId": {
            "type": "string"
          },
          "generatorType": {
            "$ref": "#/components/schemas/MetricGeneratorTypes"
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterSelectAggregateStepDto"
            },
            "nullable": true
          },
          "aggregateCustomerMetric": {
            "$ref": "#/components/schemas/AggregateCustomerMetricDto"
          },
          "joinTwoMetrics": {
            "$ref": "#/components/schemas/JoinTwoMetricsDto"
          },
          "timeWindow": {
            "$ref": "#/components/schemas/MetricGeneratorTimeWindow"
          }
        },
        "additionalProperties": false
      },
      "CreateOrUpdateCustomerDto": {
        "type": "object",
        "properties": {
          "commonUserId": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "integratedSystemReference": {
            "$ref": "#/components/schemas/IntegratedSystemReference"
          }
        },
        "additionalProperties": false
      },
      "CreateOrUpdateRecommenderArgument": {
        "required": [
          "commonId"
        ],
        "type": "object",
        "properties": {
          "commonId": {
            "maxLength": 100,
            "minLength": 4,
            "type": "string"
          },
          "argumentType": {
            "$ref": "#/components/schemas/ArgumentTypes"
          },
          "defaultValue": {
            "type": "string",
            "nullable": true
          },
          "isRequired": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateParameter": {
        "required": [
          "commonId"
        ],
        "type": "object",
        "properties": {
          "commonId": {
            "maxLength": 99,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\-]+$",
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "parameterType": {
            "pattern": "Numerical|Categorical",
            "type": "string",
            "description": "One of Categorical or Numeric",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "defaultValue": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateParameterSetRecommender": {
        "required": [
          "commonId",
          "name"
        ],
        "type": "object",
        "properties": {
          "commonId": {
            "maxLength": 99,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\-]+$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "cloneFromId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "throwOnBadInput": {
            "type": "boolean",
            "nullable": true,
            "deprecated": true
          },
          "requireConsumptionEvent": {
            "type": "boolean",
            "nullable": true,
            "deprecated": true
          },
          "settings": {
            "$ref": "#/components/schemas/RecommenderSettingsDto"
          },
          "arguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateOrUpdateRecommenderArgument"
            },
            "nullable": true
          },
          "targetMetricId": {
            "type": "string",
            "nullable": true
          },
          "segmentIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "bounds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterBounds"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePromotionDto": {
        "required": [
          "benefitType",
          "benefitValue",
          "commonId",
          "directCost",
          "numberOfRedemptions",
          "promotionType"
        ],
        "type": "object",
        "properties": {
          "commonId": {
            "maxLength": 99,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\-]+$",
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "directCost": {
            "type": "number",
            "format": "double"
          },
          "benefitType": {
            "$ref": "#/components/schemas/BenefitType"
          },
          "benefitValue": {
            "minimum": 0,
            "type": "number",
            "format": "double",
            "default": 0
          },
          "promotionType": {
            "$ref": "#/components/schemas/PromotionType"
          },
          "numberOfRedemptions": {
            "maximum": 6,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePromotionsRecommender": {
        "required": [
          "commonId",
          "name"
        ],
        "type": "object",
        "properties": {
          "commonId": {
            "maxLength": 99,
            "minLength": 3,
            "pattern": "^[a-zA-Z0-9_\\-]+$",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "cloneFromId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "throwOnBadInput": {
            "type": "boolean",
            "nullable": true,
            "deprecated": true
          },
          "requireConsumptionEvent": {
            "type": "boolean",
            "nullable": true,
            "deprecated": true
          },
          "settings": {
            "$ref": "#/components/schemas/RecommenderSettingsDto"
          },
          "arguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateOrUpdateRecommenderArgument"
            },
            "nullable": true
          },
          "targetMetricId": {
            "type": "string",
            "nullable": true
          },
          "segmentIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "itemIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "defaultItemId": {
            "type": "string",
            "nullable": true
          },
          "baselineItemId": {
            "type": "string",
            "nullable": true
          },
          "baselinePromotionId": {
            "type": "string",
            "nullable": true
          },
          "numberOfItemsToRecommend": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "useAutoAi": {
            "type": "boolean",
            "nullable": true
          },
          "targetType": {
            "$ref": "#/components/schemas/PromotionRecommenderTargetTypes"
          }
        },
        "additionalProperties": false
      },
      "CreateSegmentDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateTenantMembershipDto": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "additionalProperties": false
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "environmentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "commonId": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "commonUserId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customerId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "integratedSystemMaps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackedUserSystemMap"
            },
            "nullable": true
          },
          "businessMembership": {
            "$ref": "#/components/schemas/BusinessMembership"
          }
        },
        "additionalProperties": false
      },
      "CustomerEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "environmentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "commonUserId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "eventId": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "recommendationCorrelatorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "recommendationCorrelator": {
            "$ref": "#/components/schemas/RecommendationCorrelator"
          },
          "source": {
            "$ref": "#/components/schemas/IntegratedSystem"
          },
          "eventKind": {
            "$ref": "#/components/schemas/EventKinds"
          },
          "eventType": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "trackedUserId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "trackedUser": {
            "$ref": "#/components/schemas/Customer"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          }
        },
        "additionalProperties": false
      },
      "CustomerEventPaginated": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerEvent"
            },
            "nullable": true,
            "readOnly": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "additionalProperties": false
      },
      "CustomerEventSummary": {
        "type": "object",
        "properties": {
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventKinds"
            },
            "nullable": true,
            "readOnly": true
          },
          "kinds": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/EventKindSummary"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerMetricWeeklyNumericAggregate": {
        "type": "object",
        "properties": {
          "firstOfWeek": {
            "type": "string",
            "format": "date-time"
          },
          "lastOfWeek": {
            "type": "string",
            "format": "date-time"
          },
          "metricId": {
            "type": "integer",
            "format": "int64"
          },
          "weeklyMeanNumericValue": {
            "type": "number",
            "format": "double"
          },
          "weeklyDistinctCustomerCount": {
            "type": "integer",
            "format": "int32"
          },
          "weeklyDistinctBusinessCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CustomerMetricWeeklyStringAggregate": {
        "type": "object",
        "properties": {
          "firstOfWeek": {
            "type": "string",
            "format": "date-time"
          },
          "lastOfWeek": {
            "type": "string",
            "format": "date-time"
          },
          "metricId": {
            "type": "integer",
            "format": "int64"
          },
          "stringValue": {
            "type": "string",
            "nullable": true
          },
          "weeklyValueCount": {
            "type": "integer",
            "format": "int32"
          },
          "weeklyDistinctCustomerCount": {
            "type": "integer",
            "format": "int32"
          },
          "weeklyDistinctBusinessCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CustomerPaginated": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Customer"
            },
            "nullable": true,
            "readOnly": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "additionalProperties": false
      },
      "Data": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "$ref": "#/components/schemas/DataItems"
          }
        },
        "additionalProperties": false
      },
      "DataItems": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "properties": {
            "$ref": "#/components/schemas/ItemsProperties"
          }
        },
        "additionalProperties": false
      },
      "Default": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "schema": {
            "$ref": "#/components/schemas/Schema"
          }
        },
        "additionalProperties": false
      },
      "DefaultArgumentContainer": {
        "type": "object",
        "properties": {
          "argumentType": {
            "$ref": "#/components/schemas/ArgumentTypes"
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DefaultParameterValue": {
        "type": "object",
        "properties": {
          "parameterType": {
            "$ref": "#/components/schemas/ParameterTypes"
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Definitions": {
        "type": "object",
        "properties": {
          "ServiceInput": {
            "$ref": "#/components/schemas/ServiceInput"
          },
          "ServiceOutput": {
            "$ref": "#/components/schemas/ServiceOutput"
          },
          "ErrorResponse": {
            "$ref": "#/components/schemas/ErrorResponse"
          }
        },
        "additionalProperties": false
      },
      "DeleteResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "resouceUrl": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DestinationTrigger": {
        "type": "object",
        "additionalProperties": false
      },
      "Empty": {
        "type": "object",
        "properties": {
          "get": {
            "$ref": "#/components/schemas/Get"
          }
        },
        "additionalProperties": false
      },
      "EnrolmentReport": {
        "type": "object",
        "properties": {
          "segmentId": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "ruleId": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "rule": {
            "$ref": "#/components/schemas/EnrolmentRule"
          },
          "customersEnrolled": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "EnrolmentRule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "discriminator": {
            "type": "string",
            "nullable": true
          },
          "segmentId": {
            "type": "integer",
            "format": "int64"
          },
          "lastEnqueued": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastCompleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Environment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EnvironmentPaginated": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Environment"
            },
            "nullable": true,
            "readOnly": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "additionalProperties": false
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "$ref": "#/components/schemas/ErrorResponseProperties"
          }
        },
        "additionalProperties": false
      },
      "ErrorResponseProperties": {
        "type": "object",
        "properties": {
          "status_code": {
            "$ref": "#/components/schemas/StatusCodeClass"
          },
          "message": {
            "$ref": "#/components/schemas/Message"
          }
        },
        "additionalProperties": false
      },
      "EventCountTimeline": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "moments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MomentCount"
            },
            "nullable": true
          },
          "categoricalMoments": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": { }
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventDto": {
        "required": [
          "eventId",
          "eventType"
        ],
        "type": "object",
        "properties": {
          "commonUserId": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "eventId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "recommendationCorrelatorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "sourceSystemId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "kind": {
            "$ref": "#/components/schemas/EventKinds"
          },
          "eventType": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventKinds": {
        "enum": [
          "custom",
          "propertyUpdate",
          "behaviour",
          "pageView",
          "identify",
          "consumeRecommendation",
          "addToBusiness"
        ],
        "type": "string"
      },
      "EventKindSummary": {
        "type": "object",
        "properties": {
          "keys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "instanceCount": {
            "type": "integer",
            "format": "int32"
          },
          "eventTypes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/EventStats"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventLoggingResponse": {
        "type": "object",
        "properties": {
          "eventsProcessed": {
            "type": "integer",
            "format": "int32"
          },
          "eventsEnqueued": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EventStats": {
        "type": "object",
        "properties": {
          "instances": {
            "type": "integer",
            "format": "int32"
          },
          "customers": {
            "type": "integer",
            "format": "int32"
          },
          "trackedUsers": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "fractionOfKind": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Examples": {
        "type": "object",
        "properties": {
          "application/json": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileInformation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FilterSelectAggregateStep": {
        "type": "object",
        "properties": {
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "filter": {
            "$ref": "#/components/schemas/FilterStep"
          },
          "select": {
            "$ref": "#/components/schemas/SelectStep"
          },
          "aggregate": {
            "$ref": "#/components/schemas/AggregateStep"
          }
        },
        "additionalProperties": false
      },
      "FilterSelectAggregateStepDto": {
        "required": [
          "order",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "pattern": "Filter|Select|Aggregate",
            "type": "string"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "eventTypeMatch": {
            "type": "string",
            "nullable": true
          },
          "propertyNameMatch": {
            "type": "string",
            "nullable": true
          },
          "aggregationType": {
            "pattern": "Sum|Mean",
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FilterStep": {
        "type": "object",
        "properties": {
          "eventTypeMatch": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Get": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "responses": {
            "$ref": "#/components/schemas/GetResponses"
          }
        },
        "additionalProperties": false
      },
      "GetResponses": {
        "type": "object",
        "properties": {
          "200": {
            "$ref": "#/components/schemas/The200"
          },
          "default": {
            "$ref": "#/components/schemas/Default"
          }
        },
        "additionalProperties": false
      },
      "GettingStartedChecklist": {
        "type": "object",
        "properties": {
          "steps": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CheckistItem"
            },
            "nullable": true
          },
          "allComplete": {
            "type": "boolean",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "HistoricCustomerMetric": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "metricId": {
            "type": "integer",
            "format": "int64"
          },
          "feature": {
            "$ref": "#/components/schemas/Metric"
          },
          "metric": {
            "$ref": "#/components/schemas/Metric"
          },
          "numericValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "stringValue": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true,
            "readOnly": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "discriminator": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "trackedUser": {
            "$ref": "#/components/schemas/Customer"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          }
        },
        "additionalProperties": false
      },
      "HistoricCustomerMetricPaginated": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HistoricCustomerMetric"
            },
            "nullable": true,
            "readOnly": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "additionalProperties": false
      },
      "Hosting": {
        "type": "object",
        "properties": {
          "multitenant": {
            "type": "boolean"
          },
          "canonicalRootDomain": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HostingTypes": {
        "enum": [
          "azureMLContainerInstance",
          "azurePersonalizer",
          "azureFunctions"
        ],
        "type": "string"
      },
      "HotjarConfig": {
        "type": "object",
        "properties": {
          "siteId": {
            "type": "integer",
            "format": "int32"
          },
          "snippetVersion": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Info": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IntegratedSystem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "environmentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "commonId": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "systemType": {
            "$ref": "#/components/schemas/IntegratedSystemTypes"
          },
          "integrationStatus": {
            "$ref": "#/components/schemas/IntegrationStatuses"
          },
          "tokenResponseUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "discriminator": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IntegratedSystemPaginated": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegratedSystem"
            },
            "nullable": true,
            "readOnly": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "additionalProperties": false
      },
      "IntegratedSystemReference": {
        "required": [
          "integratedSystemId",
          "userId"
        ],
        "type": "object",
        "properties": {
          "integratedSystemId": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "IntegratedSystemTypes": {
        "enum": [
          "segment",
          "hubspot",
          "custom"
        ],
        "type": "string"
      },
      "IntegrationStatuses": {
        "enum": [
          "notConfigured",
          "ok"
        ],
        "type": "string"
      },
      "InvokationLogEntry": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "recommenderType": {
            "type": "string",
            "nullable": true
          },
          "recommenderId": {
            "type": "integer",
            "format": "int64"
          },
          "success": {
            "type": "boolean",
            "nullable": true
          },
          "modelResponse": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true,
            "deprecated": true
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "invokeStarted": {
            "type": "string",
            "format": "date-time"
          },
          "invokeEnded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "correlatorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "correlator": {
            "$ref": "#/components/schemas/RecommendationCorrelator"
          },
          "customerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "businessId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "business": {
            "$ref": "#/components/schemas/Business"
          }
        },
        "additionalProperties": false
      },
      "InvokationLogEntryPaginated": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvokationLogEntry"
            },
            "nullable": true,
            "readOnly": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "additionalProperties": false
      },
      "ItemsProperties": {
        "type": "object",
        "properties": {
          "Column2": {
            "$ref": "#/components/schemas/Message"
          },
          "A": {
            "$ref": "#/components/schemas/StatusCodeClass"
          },
          "B": {
            "$ref": "#/components/schemas/StatusCodeClass"
          }
        },
        "additionalProperties": false
      },
      "ItemsRecommendation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "environmentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "recommenderType": {
            "$ref": "#/components/schemas/RecommenderTypes"
          },
          "customerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "trackedUser": {
            "$ref": "#/components/schemas/Customer"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "businessId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "business": {
            "$ref": "#/components/schemas/Business"
          },
          "targetMetricId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "targetMetric": {
            "$ref": "#/components/schemas/Metric"
          },
          "trigger": {
            "type": "string",
            "nullable": true
          },
          "recommendationCorrelatorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "modelInput": {
            "type": "string",
            "nullable": true
          },
          "modelInputType": {
            "type": "string",
            "nullable": true
          },
          "modelOutput": {
            "type": "string",
            "nullable": true
          },
          "modelOutputType": {
            "type": "string",
            "nullable": true
          },
          "isFromCache": {
            "type": "boolean"
          },
          "recommenderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "recommender": {
            "$ref": "#/components/schemas/ItemsRecommender"
          },
          "maxScoreItemId": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "scoredItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScoredRecommendableItem"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ItemsRecommendationPaginated": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemsRecommendation"
            },
            "nullable": true,
            "readOnly": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "additionalProperties": false
      },
      "ItemsRecommender": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "environmentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "commonId": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "errorHandling": {
            "$ref": "#/components/schemas/RecommenderErrorHandling"
          },
          "settings": {
            "$ref": "#/components/schemas/RecommenderSettings"
          },
          "arguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecommenderArgument"
            },
            "nullable": true
          },
          "triggerCollection": {
            "$ref": "#/components/schemas/TriggerCollection"
          },
          "modelRegistrationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "modelRegistration": {
            "$ref": "#/components/schemas/ModelRegistration"
          },
          "baselineItemId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "baselineItem": {
            "$ref": "#/components/schemas/RecommendableItem"
          },
          "defaultItem": {
            "$ref": "#/components/schemas/RecommendableItem"
          },
          "numberOfItemsToRecommend": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecommendableItem"
            },
            "nullable": true
          },
          "targetMetricId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "targetMetric": {
            "$ref": "#/components/schemas/Metric"
          },
          "targetType": {
            "$ref": "#/components/schemas/PromotionRecommenderTargetTypes"
          }
        },
        "additionalProperties": false
      },
      "ItemsRecommenderPaginated": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemsRecommender"
            },
            "nullable": true,
            "readOnly": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "additionalProperties": false
      },
      "ItemsRecommenderPerformanceReport": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "environmentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "recommenderId": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "recommender": {
            "$ref": "#/components/schemas/RecommenderEntityBase"
          },
          "discriminator": {
            "type": "string",
            "nullable": true
          },
          "itemsById": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/RecommendableItem"
            },
            "nullable": true,
            "readOnly": true
          },
          "itemsByCommonId": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/RecommendableItem"
            },
            "nullable": true,
            "readOnly": true
          },
          "itemsRecommender": {
            "$ref": "#/components/schemas/ItemsRecommender"
          },
          "targetMetric": {
            "$ref": "#/components/schemas/Metric"
          },
          "performanceByItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PerformanceByItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JoinTwoMetrics": {
        "type": "object",
        "properties": {
          "metric1Id": {
            "type": "integer",
            "format": "int64"
          },
          "metric1": {
            "$ref": "#/components/schemas/Metric"
          },
          "metric2Id": {
            "type": "integer",
            "format": "int64"
          },
          "metric2": {
            "$ref": "#/components/schemas/Metric"
          },
          "joinType": {
            "$ref": "#/components/schemas/JoinType"
          }
        },
        "additionalProperties": false
      },
      "JoinTwoMetricsDto": {
        "required": [
          "joinType",
          "metric1Id",
          "metric2Id"
        ],
        "type": "object",
        "properties": {
          "metric1Id": {
            "type": "integer",
            "format": "int64"
          },
          "metric2Id": {
            "type": "integer",
            "format": "int64"
          },
          "joinType": {
            "$ref": "#/components/schemas/JoinType"
          }
        },
        "additionalProperties": false
      },
      "JoinType": {
        "enum": [
          "divide"
        ],
        "type": "string"
      },
      "LaunchDarklyConfig": {
        "type": "object",
        "properties": {
          "sdkKey": {
            "type": "string",
            "nullable": true
          },
          "mobileKey": {
            "type": "string",
            "nullable": true
          },
          "clientSideId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LinkModel": {
        "type": "object",
        "properties": {
          "modelId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "Message": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Metric": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "environmentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "commonId": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "valueType": {
            "$ref": "#/components/schemas/MetricValueType"
          },
          "scope": {
            "$ref": "#/components/schemas/MetricScopes"
          }
        },
        "additionalProperties": false
      },
      "MetricDailyBinValueNumeric": {
        "type": "object",
        "properties": {
          "binFloor": {
            "type": "number",
            "format": "double"
          },
          "binWidth": {
            "type": "number",
            "format": "double"
          },
          "binRange": {
            "type": "string",
            "nullable": true
          },
          "customerCount": {
            "type": "integer",
            "format": "int32"
          },
          "businessCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MetricDailyBinValueString": {
        "type": "object",
        "properties": {
          "stringValue": {
            "type": "string",
            "nullable": true
          },
          "customerCount": {
            "type": "integer",
            "format": "int32"
          },
          "businessCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MetricDestinationBase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "destinationType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "metric": {
            "$ref": "#/components/schemas/Metric"
          },
          "feature": {
            "$ref": "#/components/schemas/Metric"
          },
          "connectedSystemId": {
            "type": "integer",
            "format": "int64"
          },
          "connectedSystem": {
            "$ref": "#/components/schemas/IntegratedSystem"
          },
          "discriminator": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MetricEnrolmentRule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "discriminator": {
            "type": "string",
            "nullable": true
          },
          "segmentId": {
            "type": "integer",
            "format": "int64"
          },
          "lastEnqueued": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastCompleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "metricId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "metric": {
            "$ref": "#/components/schemas/Metric"
          },
          "numericPredicate": {
            "$ref": "#/components/schemas/NumericPredicate"
          },
          "categoricalPredicate": {
            "$ref": "#/components/schemas/CategoricalPredicate"
          }
        },
        "additionalProperties": false
      },
      "MetricEnrolmentRulePaginated": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricEnrolmentRule"
            },
            "nullable": true,
            "readOnly": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "additionalProperties": false
      },
      "MetricGenerator": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "lastEnqueued": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastCompleted": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "metricId": {
            "type": "integer",
            "format": "int64"
          },
          "metric": {
            "$ref": "#/components/schemas/Metric"
          },
          "feature": {
            "$ref": "#/components/schemas/Metric"
          },
          "generatorType": {
            "$ref": "#/components/schemas/MetricGeneratorTypes"
          },
          "filterSelectAggregateSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterSelectAggregateStep"
            },
            "nullable": true
          },
          "timeWindow": {
            "$ref": "#/components/schemas/MetricGeneratorTimeWindow"
          },
          "aggregateCustomerMetric": {
            "$ref": "#/components/schemas/AggregateCustomerMetric"
          },
          "joinTwoMetrics": {
            "$ref": "#/components/schemas/JoinTwoMetrics"
          }
        },
        "additionalProperties": false
      },
      "MetricGeneratorPaginated": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricGenerator"
            },
            "nullable": true,
            "readOnly": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "additionalProperties": false
      },
      "MetricGeneratorRunSummary": {
        "type": "object",
        "properties": {
          "enqueued": {
            "type": "boolean",
            "nullable": true
          },
          "totalWrites": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxSubsetSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MetricGeneratorTimeWindow": {
        "enum": [
          "allTime",
          "sevenDays",
          "thirtyDays"
        ],
        "type": "string"
      },
      "MetricGeneratorTypes": {
        "enum": [
          "monthsSinceEarliestEvent",
          "filterSelectAggregate",
          "aggregateCustomerMetric",
          "joinTwoMetrics"
        ],
        "type": "string"
      },
      "MetricPaginated": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Metric"
            },
            "nullable": true,
            "readOnly": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "additionalProperties": false
      },
      "MetricsChangedTrigger": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "featureCommonIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "metricCommonIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MetricScopes": {
        "enum": [
          "customer",
          "business",
          "global"
        ],
        "type": "string"
      },
      "MetricValueType": {
        "enum": [
          "numeric",
          "categorical"
        ],
        "type": "string"
      },
      "ModelInputDto": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "commonUserId": {
            "type": "string",
            "nullable": true
          },
          "businessId": {
            "type": "string",
            "nullable": true
          },
          "arguments": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "metrics": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "features": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "parameterBounds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterBounds"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModelRegistration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "modelType": {
            "$ref": "#/components/schemas/ModelTypes"
          },
          "hostingType": {
            "$ref": "#/components/schemas/HostingTypes"
          },
          "scoringUrl": {
            "type": "string",
            "nullable": true
          },
          "swagger": {
            "$ref": "#/components/schemas/SwaggerDefinition"
          }
        },
        "additionalProperties": false
      },
      "ModelRegistrationPaginated": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModelRegistration"
            },
            "nullable": true,
            "readOnly": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "additionalProperties": false
      },
      "ModelTypes": {
        "enum": [
          "singleClassClassifier",
          "parameterSetRecommenderV1",
          "productRecommenderV1",
          "itemsRecommenderV1"
        ],
        "type": "string"
      },
      "MomentCount": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "unixTime": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "count": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "NewTenantDto": {
        "required": [
          "name",
          "termsOfServiceVersion"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 25,
            "minLength": 4,
            "type": "string"
          },
          "termsOfServiceVersion": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "NextPageInfo": {
        "type": "object",
        "properties": {
          "after": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NumericalParameterBounds": {
        "type": "object",
        "properties": {
          "min": {
            "type": "number",
            "format": "double"
          },
          "max": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "NumericPredicate": {
        "type": "object",
        "properties": {
          "predicateOperator": {
            "$ref": "#/components/schemas/NumericPredicateOperators"
          },
          "compareTo": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "NumericPredicateOperators": {
        "enum": [
          "none",
          "equal",
          "notEqual",
          "greaterThan",
          "lessThan",
          "greaterThanOrEqualTo",
          "lessThanOrEqualTo"
        ],
        "type": "string"
      },
      "ObjectPaginated": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": { },
            "nullable": true,
            "readOnly": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "additionalProperties": false
      },
      "OpenApiSecurity": {
        "type": "object",
        "properties": {
          "Bearer": {
            "type": "array",
            "items": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaginationInfo": {
        "type": "object",
        "properties": {
          "pageCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalItemCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hasPreviousPage": {
            "type": "boolean",
            "readOnly": true
          },
          "hasNextPage": {
            "type": "boolean",
            "readOnly": true
          },
          "isFirstPage": {
            "type": "boolean",
            "readOnly": true
          },
          "isLastPage": {
            "type": "boolean",
            "readOnly": true
          },
          "next": {
            "$ref": "#/components/schemas/NextPageInfo"
          }
        },
        "additionalProperties": false
      },
      "Parameter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "environmentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "commonId": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "parameterType": {
            "$ref": "#/components/schemas/ParameterTypes"
          },
          "defaultValue": {
            "$ref": "#/components/schemas/DefaultParameterValue"
          },
          "default": {
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParameterBounds": {
        "type": "object",
        "properties": {
          "commonId": {
            "type": "string",
            "nullable": true
          },
          "numericBounds": {
            "$ref": "#/components/schemas/NumericalParameterBounds"
          },
          "categoricalBounds": {
            "$ref": "#/components/schemas/CategoricalParameterBounds"
          }
        },
        "additionalProperties": false
      },
      "ParameterPaginated": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Parameter"
            },
            "nullable": true,
            "readOnly": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "additionalProperties": false
      },
      "ParameterSetRecommendation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "environmentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "recommenderType": {
            "$ref": "#/components/schemas/RecommenderTypes"
          },
          "customerId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "trackedUser": {
            "$ref": "#/components/schemas/Customer"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "businessId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "business": {
            "$ref": "#/components/schemas/Business"
          },
          "targetMetricId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "targetMetric": {
            "$ref": "#/components/schemas/Metric"
          },
          "trigger": {
            "type": "string",
            "nullable": true
          },
          "recommendationCorrelatorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "modelInput": {
            "type": "string",
            "nullable": true
          },
          "modelInputType": {
            "type": "string",
            "nullable": true
          },
          "modelOutput": {
            "type": "string",
            "nullable": true
          },
          "modelOutputType": {
            "type": "string",
            "nullable": true
          },
          "isFromCache": {
            "type": "boolean"
          },
          "recommenderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "recommender": {
            "$ref": "#/components/schemas/ParameterSetRecommender"
          }
        },
        "additionalProperties": false
      },
      "ParameterSetRecommendationDto": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "correlatorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "recommendedParameters": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "commonUserId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customerId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "business": {
            "$ref": "#/components/schemas/Business"
          },
          "businessId": {
            "type": "string",
            "nullable": true
          },
          "trigger": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParameterSetRecommendationPaginated": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterSetRecommendation"
            },
            "nullable": true,
            "readOnly": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "additionalProperties": false
      },
      "ParameterSetRecommender": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "environmentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "commonId": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "errorHandling": {
            "$ref": "#/components/schemas/RecommenderErrorHandling"
          },
          "settings": {
            "$ref": "#/components/schemas/RecommenderSettings"
          },
          "arguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecommenderArgument"
            },
            "nullable": true
          },
          "triggerCollection": {
            "$ref": "#/components/schemas/TriggerCollection"
          },
          "modelRegistrationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "modelRegistration": {
            "$ref": "#/components/schemas/ModelRegistration"
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Parameter"
            },
            "nullable": true
          },
          "parameterBounds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterBounds"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParameterSetRecommenderPaginated": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParameterSetRecommender"
            },
            "nullable": true,
            "readOnly": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "additionalProperties": false
      },
      "ParameterTypes": {
        "enum": [
          "numerical",
          "categorical"
        ],
        "type": "string"
      },
      "Paths": {
        "type": "object",
        "properties": {
          "/": {
            "$ref": "#/components/schemas/Empty"
          },
          "/score": {
            "$ref": "#/components/schemas/Score"
          }
        },
        "additionalProperties": false
      },
      "PerformanceByItem": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "integer",
            "format": "int64"
          },
          "weekIndex": {
            "type": "integer",
            "format": "int32"
          },
          "targetMetricSum": {
            "type": "number",
            "format": "double"
          },
          "customerCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "businessCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "recommendationCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Post": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "security": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenApiSecurity"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bearer"
            },
            "nullable": true
          },
          "responses": {
            "$ref": "#/components/schemas/PostResponses"
          }
        },
        "additionalProperties": false
      },
      "PostResponses": {
        "type": "object",
        "properties": {
          "200": {
            "$ref": "#/components/schemas/Default"
          },
          "default": {
            "$ref": "#/components/schemas/Default"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "PromotionRecommenderTargetTypes": {
        "enum": [
          "customer",
          "business"
        ],
        "type": "string"
      },
      "PromotionsRecommendationDto": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "correlatorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "commonUserId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "scoredItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScoredRecommendableItem"
            },
            "nullable": true
          },
          "business": {
            "$ref": "#/components/schemas/Business"
          },
          "businessId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "customerId": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "trigger": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PromotionType": {
        "enum": [
          "discount",
          "gift",
          "service",
          "upgrade",
          "other"
        ],
        "type": "string"
      },
      "ReactConfig": {
        "type": "object",
        "properties": {
          "segment": {
            "$ref": "#/components/schemas/SegmentConfig"
          },
          "hotjar": {
            "$ref": "#/components/schemas/HotjarConfig"
          },
          "launchDarkly": {
            "$ref": "#/components/schemas/LaunchDarklyConfig"
          },
          "auth0": {
            "$ref": "#/components/schemas/Auth0ReactConfig"
          }
        },
        "additionalProperties": false
      },
      "RecommendableItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "environmentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "commonId": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "directCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "benefitType": {
            "$ref": "#/components/schemas/BenefitType"
          },
          "benefitValue": {
            "type": "number",
            "format": "double"
          },
          "promotionType": {
            "$ref": "#/components/schemas/PromotionType"
          },
          "numberOfRedemptions": {
            "type": "integer",
            "format": "int32"
          },
          "discriminator": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RecommendableItemPaginated": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecommendableItem"
            },
            "nullable": true,
            "readOnly": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "additionalProperties": false
      },
      "RecommendationCorrelator": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "recommenderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "recommender": {
            "$ref": "#/components/schemas/RecommenderEntityBase"
          },
          "modelRegistrationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "modelRegistration": {
            "$ref": "#/components/schemas/ModelRegistration"
          }
        },
        "additionalProperties": false
      },
      "RecommendationDestinationBase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "environmentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "destinationType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "recommender": {
            "$ref": "#/components/schemas/RecommenderEntityBase"
          },
          "trigger": {
            "$ref": "#/components/schemas/DestinationTrigger"
          },
          "connectedSystemId": {
            "type": "integer",
            "format": "int64"
          },
          "connectedSystem": {
            "$ref": "#/components/schemas/IntegratedSystem"
          },
          "discriminator": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RecommenderArgument": {
        "type": "object",
        "properties": {
          "commonId": {
            "type": "string",
            "nullable": true
          },
          "argumentType": {
            "$ref": "#/components/schemas/ArgumentTypes"
          },
          "defaultValue": {
            "$ref": "#/components/schemas/DefaultArgumentContainer"
          },
          "defaultArgumentValue": {
            "nullable": true
          },
          "isRequired": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RecommenderEntityBase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "environmentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "commonId": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "errorHandling": {
            "$ref": "#/components/schemas/RecommenderErrorHandling"
          },
          "settings": {
            "$ref": "#/components/schemas/RecommenderSettings"
          },
          "arguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecommenderArgument"
            },
            "nullable": true
          },
          "triggerCollection": {
            "$ref": "#/components/schemas/TriggerCollection"
          },
          "modelRegistrationId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "modelRegistration": {
            "$ref": "#/components/schemas/ModelRegistration"
          }
        },
        "additionalProperties": false
      },
      "RecommenderErrorHandling": {
        "type": "object",
        "properties": {
          "throwOnBadInput": {
            "type": "boolean",
            "nullable": true
          },
          "requireConsumptionEvent": {
            "type": "boolean",
            "nullable": true
          },
          "recommendationCacheTime": {
            "$ref": "#/components/schemas/TimeSpan"
          }
        },
        "additionalProperties": false
      },
      "RecommenderSettings": {
        "type": "object",
        "properties": {
          "throwOnBadInput": {
            "type": "boolean",
            "nullable": true
          },
          "requireConsumptionEvent": {
            "type": "boolean",
            "nullable": true
          },
          "recommendationCacheTime": {
            "$ref": "#/components/schemas/TimeSpan"
          }
        },
        "additionalProperties": false
      },
      "RecommenderSettingsDto": {
        "type": "object",
        "properties": {
          "throwOnBadInput": {
            "type": "boolean",
            "nullable": true
          },
          "requireConsumptionEvent": {
            "type": "boolean",
            "nullable": true
          },
          "recommendationCacheTime": {
            "$ref": "#/components/schemas/TimeSpan"
          }
        },
        "additionalProperties": false
      },
      "RecommenderStatistics": {
        "type": "object",
        "properties": {
          "numberCustomersRecommended": {
            "type": "integer",
            "format": "int64"
          },
          "numberInvokations": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RecommenderTypes": {
        "enum": [
          "product",
          "parameterSet",
          "items",
          "offer"
        ],
        "type": "string"
      },
      "RegisterNewModelDto": {
        "required": [
          "hostingType",
          "key",
          "modelType",
          "name",
          "scoringUrl"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "scoringUrl": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "swaggerUrl": {
            "type": "string",
            "nullable": true
          },
          "modelType": {
            "pattern": "SingleClassClassifier|ParameterSetRecommenderV1|ProductRecommenderV1|ItemsRecommenderV1",
            "type": "string"
          },
          "hostingType": {
            "pattern": "AzureMLContainerInstance|AzurePersonalizer",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Schema": {
        "type": "object",
        "properties": {
          "$ref": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Score": {
        "type": "object",
        "properties": {
          "post": {
            "$ref": "#/components/schemas/Post"
          }
        },
        "additionalProperties": false
      },
      "ScoredRecommendableItem": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "itemCommonId": {
            "type": "string",
            "nullable": true
          },
          "commonId": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "$ref": "#/components/schemas/RecommendableItem"
          },
          "score": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SecurityDefinitions": {
        "type": "object",
        "properties": {
          "Bearer": {
            "$ref": "#/components/schemas/Bearer"
          }
        },
        "additionalProperties": false
      },
      "Segment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "environmentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SegmentConfig": {
        "type": "object",
        "properties": {
          "writeKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SegmentPaginated": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Segment"
            },
            "nullable": true,
            "readOnly": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "additionalProperties": false
      },
      "SelectStep": {
        "type": "object",
        "properties": {
          "propertyNameMatch": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceInput": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "$ref": "#/components/schemas/ServiceInputProperties"
          },
          "example": {
            "$ref": "#/components/schemas/AzureMLModelInput"
          }
        },
        "additionalProperties": false
      },
      "ServiceInputProperties": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Data"
          }
        },
        "additionalProperties": false
      },
      "ServiceOutput": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "$ref": "#/components/schemas/StatusCodeClass"
          },
          "example": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SetLearningMetrics": {
        "type": "object",
        "properties": {
          "useInternalId": {
            "type": "boolean",
            "nullable": true
          },
          "featureIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "metricIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SetTriggersDto": {
        "type": "object",
        "properties": {
          "featuresChanged": {
            "$ref": "#/components/schemas/MetricsChangedTrigger"
          },
          "metricsChanged": {
            "$ref": "#/components/schemas/MetricsChangedTrigger"
          }
        },
        "additionalProperties": false
      },
      "StatusCodeClass": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "format": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatusDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SwaggerDefinition": {
        "type": "object",
        "properties": {
          "swagger": {
            "type": "string",
            "nullable": true
          },
          "info": {
            "$ref": "#/components/schemas/Info"
          },
          "schemes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "consumes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "produces": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "securityDefinitions": {
            "$ref": "#/components/schemas/SecurityDefinitions"
          },
          "paths": {
            "$ref": "#/components/schemas/Paths"
          },
          "definitions": {
            "$ref": "#/components/schemas/Definitions"
          }
        },
        "additionalProperties": false
      },
      "Tenant": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "databaseName": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "The200": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "schema": {
            "$ref": "#/components/schemas/Message"
          },
          "examples": {
            "$ref": "#/components/schemas/Examples"
          }
        },
        "additionalProperties": false
      },
      "TimeSpan": {
        "type": "object",
        "properties": {
          "ticks": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "days": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hours": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "milliseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "minutes": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "seconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalDays": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalHours": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMilliseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMinutes": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalSeconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TrackedUserSystemMap": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "integratedSystemId": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TriggerCollection": {
        "type": "object",
        "properties": {
          "featuresChanged": {
            "$ref": "#/components/schemas/MetricsChangedTrigger"
          },
          "metricsChanged": {
            "$ref": "#/components/schemas/MetricsChangedTrigger"
          }
        },
        "additionalProperties": false
      },
      "UpdatePromotionDto": {
        "required": [
          "benefitType",
          "benefitValue",
          "directCost",
          "name",
          "numberOfRedemptions",
          "promotionType"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "directCost": {
            "type": "number",
            "format": "double"
          },
          "benefitType": {
            "$ref": "#/components/schemas/BenefitType"
          },
          "benefitValue": {
            "minimum": 0,
            "type": "number",
            "format": "double",
            "default": 0
          },
          "promotionType": {
            "$ref": "#/components/schemas/PromotionType"
          },
          "numberOfRedemptions": {
            "maximum": 6,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 1
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserInfo": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "emailVerified": {
            "type": "boolean",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "invitationUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserInfoPaginated": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "additionalProperties": false
      },
      "UserMetadata": {
        "type": "object",
        "properties": {
          "gettingStartedChecklist": {
            "$ref": "#/components/schemas/GettingStartedChecklist"
          }
        },
        "additionalProperties": false
      },
      "WebhookReceiver": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "environmentId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "environment": {
            "$ref": "#/components/schemas/Environment"
          },
          "endpointId": {
            "type": "string",
            "nullable": true
          },
          "sharedSecret": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}