/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/Actions/distinct-names": {
    get: {
      parameters: {
        query: {
          page?: number;
          term?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["StringPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Actions/distinct-groups": {
    get: {
      parameters: {
        query: {
          page?: number;
          term?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ActionCategoryAndNamePaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/ApiKeys/exchange": {
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ApiKeyExchangeResponseDto"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ApiKeyExchangeRequestDto"];
          "text/json": components["schemas"]["ApiKeyExchangeRequestDto"];
          "application/*+json": components["schemas"]["ApiKeyExchangeRequestDto"];
        };
      };
    };
  };
  "/api/ApiKeys/create": {
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CreateApiKeyResponseDto"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateApiKeyDto"];
          "text/json": components["schemas"]["CreateApiKeyDto"];
          "application/*+json": components["schemas"]["CreateApiKeyDto"];
        };
      };
    };
  };
  "/api/ApiKeys": {
    get: {
      parameters: {
        query: {
          page?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ApiKeyDtoPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["CreateApiKeyResponseDto"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateApiKeyDto"];
          "text/json": components["schemas"]["CreateApiKeyDto"];
          "application/*+json": components["schemas"]["CreateApiKeyDto"];
        };
      };
    };
  };
  "/api/ApiKeys/{id}": {
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["DeleteResponse"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/models/AzureSingleClassClassifier/{id}/invoke": {
    post: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          version?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["AzureMLClassifierOutput"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["AzureMLModelInput"];
          "text/json": components["schemas"]["AzureMLModelInput"];
          "application/*+json": components["schemas"]["AzureMLModelInput"];
        };
      };
    };
  };
  "/api/DataSummary/events": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["TrackedUserEventSummary"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/DataSummary/actions": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["TrackedUserActionPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/DataSummary/events/timeline/{kind}/{eventType}": {
    get: {
      parameters: {
        path: {
          kind: string;
          eventType: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EventCountTimeline"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Environments": {
    get: {
      parameters: {
        query: {
          page?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EnvironmentPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Environment"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateEnvironment"];
          "text/json": components["schemas"]["CreateEnvironment"];
          "application/*+json": components["schemas"]["CreateEnvironment"];
        };
      };
    };
  };
  "/api/Environments/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Environment"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["DeleteResponse"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Events": {
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["EventLoggingResponse"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["EventDto"][];
          "text/json": components["schemas"]["EventDto"][];
          "application/*+json": components["schemas"]["EventDto"][];
        };
      };
    };
  };
  "/api/Events/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["TrackedUserEvent"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/FeatureGenerators": {
    get: {
      parameters: {
        query: {
          page?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["FeatureGeneratorPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["FeatureGenerator"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateFeatureGenerator"];
          "text/json": components["schemas"]["CreateFeatureGenerator"];
          "application/*+json": components["schemas"]["CreateFeatureGenerator"];
        };
      };
    };
  };
  "/api/FeatureGenerators/{id}/Trigger": {
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["FeatureGeneratorRunSummary"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/FeatureGenerators/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["FeatureGenerator"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["DeleteResponse"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Features": {
    get: {
      parameters: {
        query: {
          page?: number;
          term?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["FeaturePaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Feature"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateFeatureMetadata"];
          "text/json": components["schemas"]["CreateFeatureMetadata"];
          "application/*+json": components["schemas"]["CreateFeatureMetadata"];
        };
      };
    };
  };
  "/api/Features/{id}/TrackedUsers": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          page?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["TrackedUserPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Features/{id}/Generators": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          page?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["FeatureGeneratorPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Features/{id}/TrackedUserFeatures": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          page?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["HistoricTrackedUserFeaturePaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Features/{id}/Destinations": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["FeatureDestinationBase"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["FeatureDestinationBase"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateDestinationDto"];
          "text/json": components["schemas"]["CreateDestinationDto"];
          "application/*+json": components["schemas"]["CreateDestinationDto"];
        };
      };
    };
  };
  "/api/Features/{id}/Destinations/{destinationId}": {
    delete: {
      parameters: {
        path: {
          id: string;
          destinationId: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["FeatureDestinationBase"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Features/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Feature"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["DeleteResponse"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Features/{id}/name": {
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          name?: string;
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Feature"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Features/{id}/Properties": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": { [key: string]: unknown };
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": { [key: string]: unknown };
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": { [key: string]: unknown };
          "text/json": { [key: string]: unknown };
          "application/*+json": { [key: string]: unknown };
        };
      };
    };
  };
  "/api/models/generic/{id}/invoke": {
    post: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": string;
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/IntegratedSystems": {
    get: {
      parameters: {
        query: {
          page?: number;
          term?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["IntegratedSystemPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["IntegratedSystem"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateIntegratedSystemDto"];
          "text/json": components["schemas"]["CreateIntegratedSystemDto"];
          "application/*+json": components["schemas"]["CreateIntegratedSystemDto"];
        };
      };
    };
  };
  "/api/IntegratedSystems/{id}/webhookreceivers": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["WebhookReceiver"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          useSharedSecret?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["WebhookReceiver"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/IntegratedSystems/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["IntegratedSystem"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["DeleteResponse"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/IntegratedSystems/{id}/name": {
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          name?: string;
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["IntegratedSystem"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/IntegratedSystems/{id}/Properties": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": { [key: string]: unknown };
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": { [key: string]: unknown };
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": { [key: string]: unknown };
          "text/json": { [key: string]: unknown };
          "application/*+json": { [key: string]: unknown };
        };
      };
    };
  };
  "/api/recommenders/ItemsRecommenders/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ItemsRecommender"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["DeleteResponse"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/recommenders/ItemsRecommenders": {
    get: {
      parameters: {
        query: {
          page?: number;
          term?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ItemsRecommenderPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ItemsRecommender"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateItemsRecommender"];
          "text/json": components["schemas"]["CreateItemsRecommender"];
          "application/*+json": components["schemas"]["CreateItemsRecommender"];
        };
      };
    };
  };
  "/api/recommenders/ItemsRecommenders/{id}/DefaultItem": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommendableItem"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommendableItem"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["DefaultItemDto"];
          "text/json": components["schemas"]["DefaultItemDto"];
          "application/*+json": components["schemas"]["DefaultItemDto"];
        };
      };
    };
  };
  "/api/recommenders/ItemsRecommenders/{id}/ModelRegistration": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ModelRegistration"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/recommenders/ItemsRecommenders/{id}/invoke": {
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ItemsRecommendationDto"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ModelInputDto"];
          "text/json": components["schemas"]["ModelInputDto"];
          "application/*+json": components["schemas"]["ModelInputDto"];
        };
      };
    };
  };
  "/api/recommenders/ItemsRecommenders/{id}/Recommendations": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          page?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ItemsRecommendationPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/recommenders/ItemsRecommenders/{id}/Items": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          page?: number;
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommendableItemPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommendableItem"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["AddItemDto"];
          "text/json": components["schemas"]["AddItemDto"];
          "application/*+json": components["schemas"]["AddItemDto"];
        };
      };
    };
  };
  "/api/recommenders/ItemsRecommenders/{id}/Items/{itemId}": {
    delete: {
      parameters: {
        path: {
          id: string;
          itemId: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommendableItem"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/recommenders/ItemsRecommenders/{id}/InvokationLogs": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          page?: number;
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InvokationLogEntryPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/recommenders/ItemsRecommenders/{id}/TargetVariableValues": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          name?: string;
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommenderTargetVariableValue"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommenderTargetVariableValue"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateTargetVariableValue"];
          "text/json": components["schemas"]["CreateTargetVariableValue"];
          "application/*+json": components["schemas"]["CreateTargetVariableValue"];
        };
      };
    };
  };
  "/api/recommenders/ItemsRecommenders/{id}/TrackedUserActions": {
    get: {
      parameters: {
        query: {
          page?: number;
          revenueOnly?: boolean;
          useInternalId?: boolean;
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["TrackedUserActionPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/recommenders/ItemsRecommenders/{id}/ErrorHandling": {
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommenderErrorHandling"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["RecommenderErrorHandling"];
          "text/json": components["schemas"]["RecommenderErrorHandling"];
          "application/*+json": components["schemas"]["RecommenderErrorHandling"];
        };
      };
    };
  };
  "/api/recommenders/ItemsRecommenders/{id}/Settings": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommenderSettings"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommenderSettings"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["RecommenderSettingsDto"];
          "text/json": components["schemas"]["RecommenderSettingsDto"];
          "application/*+json": components["schemas"]["RecommenderSettingsDto"];
        };
      };
    };
  };
  "/api/recommenders/ItemsRecommenders/{id}/Arguments": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommenderArgument"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommenderArgument"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateOrUpdateRecommenderArgument"][];
          "text/json": components["schemas"]["CreateOrUpdateRecommenderArgument"][];
          "application/*+json": components["schemas"]["CreateOrUpdateRecommenderArgument"][];
        };
      };
    };
  };
  "/api/recommenders/ItemsRecommenders/{id}/Destinations": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommendationDestinationBase"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommendationDestinationBase"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateDestinationDto"];
          "text/json": components["schemas"]["CreateDestinationDto"];
          "application/*+json": components["schemas"]["CreateDestinationDto"];
        };
      };
    };
  };
  "/api/recommenders/ItemsRecommenders/{id}/Destinations/{destinationId}": {
    delete: {
      parameters: {
        path: {
          id: string;
          destinationId: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommenderEntityBase"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/recommenders/ItemsRecommenders/{id}/TriggerCollection": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["TriggerCollection"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["TriggerCollection"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SetTriggersDto"];
          "text/json": components["schemas"]["SetTriggersDto"];
          "application/*+json": components["schemas"]["SetTriggersDto"];
        };
      };
    };
  };
  "/api/recommenders/ItemsRecommenders/{id}/LearningFeatures": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Feature"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Feature"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SetLearningFeatures"];
          "text/json": components["schemas"]["SetLearningFeatures"];
          "application/*+json": components["schemas"]["SetLearningFeatures"];
        };
      };
    };
  };
  "/api/recommenders/ItemsRecommenders/{id}/name": {
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          name?: string;
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ItemsRecommender"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/recommenders/ItemsRecommenders/{id}/Properties": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": { [key: string]: unknown };
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": { [key: string]: unknown };
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": { [key: string]: unknown };
          "text/json": { [key: string]: unknown };
          "application/*+json": { [key: string]: unknown };
        };
      };
    };
  };
  "/api/ModelRegistrations": {
    get: {
      parameters: {
        query: {
          page?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ModelRegistrationPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ModelRegistration"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["RegisterNewModelDto"];
          "text/json": components["schemas"]["RegisterNewModelDto"];
          "application/*+json": components["schemas"]["RegisterNewModelDto"];
        };
      };
    };
  };
  "/api/ModelRegistrations/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ModelRegistration"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["DeleteResponse"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Parameters": {
    get: {
      parameters: {
        query: {
          page?: number;
          term?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ParameterPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Parameter"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateParameter"];
          "text/json": components["schemas"]["CreateParameter"];
          "application/*+json": components["schemas"]["CreateParameter"];
        };
      };
    };
  };
  "/api/Parameters/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Parameter"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["DeleteResponse"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Parameters/{id}/name": {
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          name?: string;
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Parameter"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Parameters/{id}/Properties": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": { [key: string]: unknown };
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": { [key: string]: unknown };
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": { [key: string]: unknown };
          "text/json": { [key: string]: unknown };
          "application/*+json": { [key: string]: unknown };
        };
      };
    };
  };
  "/api/recommenders/ParameterSetRecommenders": {
    get: {
      parameters: {
        query: {
          page?: number;
          term?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ParameterSetRecommenderPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ParameterSetRecommender"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateParameterSetRecommender"];
          "text/json": components["schemas"]["CreateParameterSetRecommender"];
          "application/*+json": components["schemas"]["CreateParameterSetRecommender"];
        };
      };
    };
  };
  "/api/recommenders/ParameterSetRecommenders/{id}/ModelRegistration": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ModelRegistration"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ModelRegistration"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["LinkModel"];
          "text/json": components["schemas"]["LinkModel"];
          "application/*+json": components["schemas"]["LinkModel"];
        };
      };
    };
  };
  "/api/recommenders/ParameterSetRecommenders/{id}/invoke": {
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ParameterSetRecommendationDto"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ModelInputDto"];
          "text/json": components["schemas"]["ModelInputDto"];
          "application/*+json": components["schemas"]["ModelInputDto"];
        };
      };
    };
  };
  "/api/recommenders/ParameterSetRecommenders/{id}/recommendations": {
    get: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          page?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ParameterSetRecommendationPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/recommenders/ParameterSetRecommenders/{id}/InvokationLogs": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          page?: number;
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InvokationLogEntryPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/recommenders/ParameterSetRecommenders/{id}/TargetVariableValues": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          name?: string;
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommenderTargetVariableValue"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommenderTargetVariableValue"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateTargetVariableValue"];
          "text/json": components["schemas"]["CreateTargetVariableValue"];
          "application/*+json": components["schemas"]["CreateTargetVariableValue"];
        };
      };
    };
  };
  "/api/recommenders/ParameterSetRecommenders/{id}/TrackedUserActions": {
    get: {
      parameters: {
        query: {
          page?: number;
          revenueOnly?: boolean;
          useInternalId?: boolean;
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["TrackedUserActionPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/recommenders/ParameterSetRecommenders/{id}/ErrorHandling": {
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommenderErrorHandling"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["RecommenderErrorHandling"];
          "text/json": components["schemas"]["RecommenderErrorHandling"];
          "application/*+json": components["schemas"]["RecommenderErrorHandling"];
        };
      };
    };
  };
  "/api/recommenders/ParameterSetRecommenders/{id}/Settings": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommenderSettings"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommenderSettings"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["RecommenderSettingsDto"];
          "text/json": components["schemas"]["RecommenderSettingsDto"];
          "application/*+json": components["schemas"]["RecommenderSettingsDto"];
        };
      };
    };
  };
  "/api/recommenders/ParameterSetRecommenders/{id}/Arguments": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommenderArgument"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommenderArgument"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateOrUpdateRecommenderArgument"][];
          "text/json": components["schemas"]["CreateOrUpdateRecommenderArgument"][];
          "application/*+json": components["schemas"]["CreateOrUpdateRecommenderArgument"][];
        };
      };
    };
  };
  "/api/recommenders/ParameterSetRecommenders/{id}/Destinations": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommendationDestinationBase"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommendationDestinationBase"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateDestinationDto"];
          "text/json": components["schemas"]["CreateDestinationDto"];
          "application/*+json": components["schemas"]["CreateDestinationDto"];
        };
      };
    };
  };
  "/api/recommenders/ParameterSetRecommenders/{id}/Destinations/{destinationId}": {
    delete: {
      parameters: {
        path: {
          id: string;
          destinationId: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommenderEntityBase"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/recommenders/ParameterSetRecommenders/{id}/TriggerCollection": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["TriggerCollection"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["TriggerCollection"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SetTriggersDto"];
          "text/json": components["schemas"]["SetTriggersDto"];
          "application/*+json": components["schemas"]["SetTriggersDto"];
        };
      };
    };
  };
  "/api/recommenders/ParameterSetRecommenders/{id}/LearningFeatures": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Feature"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Feature"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SetLearningFeatures"];
          "text/json": components["schemas"]["SetLearningFeatures"];
          "application/*+json": components["schemas"]["SetLearningFeatures"];
        };
      };
    };
  };
  "/api/recommenders/ParameterSetRecommenders/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ParameterSetRecommender"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["DeleteResponse"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/recommenders/ParameterSetRecommenders/{id}/name": {
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          name?: string;
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ParameterSetRecommender"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/recommenders/ParameterSetRecommenders/{id}/Properties": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": { [key: string]: unknown };
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": { [key: string]: unknown };
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": { [key: string]: unknown };
          "text/json": { [key: string]: unknown };
          "application/*+json": { [key: string]: unknown };
        };
      };
    };
  };
  "/api/recommenders/ProductRecommenders/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ProductRecommender"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["DeleteResponse"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/recommenders/ProductRecommenders": {
    get: {
      parameters: {
        query: {
          page?: number;
          term?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ProductRecommenderPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ProductRecommender"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateProductRecommender"];
          "text/json": components["schemas"]["CreateProductRecommender"];
          "application/*+json": components["schemas"]["CreateProductRecommender"];
        };
      };
    };
  };
  "/api/recommenders/ProductRecommenders/{id}/DefaultProduct": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Product"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Product"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["DefaultProductDto"];
          "text/json": components["schemas"]["DefaultProductDto"];
          "application/*+json": components["schemas"]["DefaultProductDto"];
        };
      };
    };
  };
  "/api/recommenders/ProductRecommenders/{id}/ModelRegistration": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ModelRegistration"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/recommenders/ProductRecommenders/{id}/invoke": {
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ProductRecommenderModelOutputV1"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ProductRecommenderInput"];
          "text/json": components["schemas"]["ProductRecommenderInput"];
          "application/*+json": components["schemas"]["ProductRecommenderInput"];
        };
      };
    };
  };
  "/api/recommenders/ProductRecommenders/{id}/recommendations": {
    get: {
      parameters: {
        path: {
          id: number;
        };
        query: {
          page?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ProductRecommendationPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/recommenders/ProductRecommenders/{id}/InvokationLogs": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          page?: number;
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["InvokationLogEntryPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/recommenders/ProductRecommenders/{id}/TargetVariableValues": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          name?: string;
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommenderTargetVariableValue"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommenderTargetVariableValue"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateTargetVariableValue"];
          "text/json": components["schemas"]["CreateTargetVariableValue"];
          "application/*+json": components["schemas"]["CreateTargetVariableValue"];
        };
      };
    };
  };
  "/api/recommenders/ProductRecommenders/{id}/TrackedUserActions": {
    get: {
      parameters: {
        query: {
          page?: number;
          revenueOnly?: boolean;
          useInternalId?: boolean;
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["TrackedUserActionPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/recommenders/ProductRecommenders/{id}/ErrorHandling": {
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommenderErrorHandling"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["RecommenderErrorHandling"];
          "text/json": components["schemas"]["RecommenderErrorHandling"];
          "application/*+json": components["schemas"]["RecommenderErrorHandling"];
        };
      };
    };
  };
  "/api/recommenders/ProductRecommenders/{id}/Settings": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommenderSettings"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommenderSettings"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["RecommenderSettingsDto"];
          "text/json": components["schemas"]["RecommenderSettingsDto"];
          "application/*+json": components["schemas"]["RecommenderSettingsDto"];
        };
      };
    };
  };
  "/api/recommenders/ProductRecommenders/{id}/Arguments": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommenderArgument"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommenderArgument"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateOrUpdateRecommenderArgument"][];
          "text/json": components["schemas"]["CreateOrUpdateRecommenderArgument"][];
          "application/*+json": components["schemas"]["CreateOrUpdateRecommenderArgument"][];
        };
      };
    };
  };
  "/api/recommenders/ProductRecommenders/{id}/Destinations": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommendationDestinationBase"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommendationDestinationBase"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateDestinationDto"];
          "text/json": components["schemas"]["CreateDestinationDto"];
          "application/*+json": components["schemas"]["CreateDestinationDto"];
        };
      };
    };
  };
  "/api/recommenders/ProductRecommenders/{id}/Destinations/{destinationId}": {
    delete: {
      parameters: {
        path: {
          id: string;
          destinationId: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommenderEntityBase"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/recommenders/ProductRecommenders/{id}/TriggerCollection": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["TriggerCollection"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["TriggerCollection"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SetTriggersDto"];
          "text/json": components["schemas"]["SetTriggersDto"];
          "application/*+json": components["schemas"]["SetTriggersDto"];
        };
      };
    };
  };
  "/api/recommenders/ProductRecommenders/{id}/LearningFeatures": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Feature"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Feature"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["SetLearningFeatures"];
          "text/json": components["schemas"]["SetLearningFeatures"];
          "application/*+json": components["schemas"]["SetLearningFeatures"];
        };
      };
    };
  };
  "/api/recommenders/ProductRecommenders/{id}/name": {
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          name?: string;
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ProductRecommender"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/recommenders/ProductRecommenders/{id}/Properties": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": { [key: string]: unknown };
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": { [key: string]: unknown };
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": { [key: string]: unknown };
          "text/json": { [key: string]: unknown };
          "application/*+json": { [key: string]: unknown };
        };
      };
    };
  };
  "/api/Products": {
    get: {
      parameters: {
        query: {
          page?: number;
          term?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ProductPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Product"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateProductDto"];
          "text/json": components["schemas"]["CreateProductDto"];
          "application/*+json": components["schemas"]["CreateProductDto"];
        };
      };
    };
  };
  "/api/Products/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Product"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["DeleteResponse"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Products/{id}/name": {
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          name?: string;
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Product"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Products/{id}/Properties": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": { [key: string]: unknown };
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": { [key: string]: unknown };
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": { [key: string]: unknown };
          "text/json": { [key: string]: unknown };
          "application/*+json": { [key: string]: unknown };
        };
      };
    };
  };
  "/api/RecommendableItems": {
    get: {
      parameters: {
        query: {
          page?: number;
          term?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommendableItemPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommendableItem"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateRecommendableItemDto"];
          "text/json": components["schemas"]["CreateRecommendableItemDto"];
          "application/*+json": components["schemas"]["CreateRecommendableItemDto"];
        };
      };
    };
  };
  "/api/RecommendableItems/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommendableItem"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommendableItem"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["UpdateRecommendableItem"];
          "text/json": components["schemas"]["UpdateRecommendableItem"];
          "application/*+json": components["schemas"]["UpdateRecommendableItem"];
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["DeleteResponse"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/RecommendableItems/{id}/name": {
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          name?: string;
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RecommendableItem"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/RecommendableItems/{id}/Properties": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": { [key: string]: unknown };
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": { [key: string]: unknown };
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": { [key: string]: unknown };
          "text/json": { [key: string]: unknown };
          "application/*+json": { [key: string]: unknown };
        };
      };
    };
  };
  "/api/Reports": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["FileInformation"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Reports/download": {
    get: {
      parameters: {
        query: {
          report?: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/RewardSelectors": {
    get: {
      parameters: {
        query: {
          page?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RewardSelectorPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RewardSelector"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateRewardSelectorDto"];
          "text/json": components["schemas"]["CreateRewardSelectorDto"];
          "application/*+json": components["schemas"]["CreateRewardSelectorDto"];
        };
      };
    };
  };
  "/api/RewardSelectors/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["RewardSelector"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["DeleteResponse"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Segments": {
    get: {
      parameters: {
        query: {
          page?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["SegmentPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Segment"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateSegmentDto"];
          "text/json": components["schemas"]["CreateSegmentDto"];
          "application/*+json": components["schemas"]["CreateSegmentDto"];
        };
      };
    };
  };
  "/api/Segments/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Segment"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["DeleteResponse"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Tenants/Status/{name}": {
    get: {
      parameters: {
        path: {
          name: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["StatusDto"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Tenants": {
    post: {
      parameters: {
        query: {
          dryRun?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["StatusDto"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["NewTenantDto"];
          "text/json": components["schemas"]["NewTenantDto"];
          "application/*+json": components["schemas"]["NewTenantDto"];
        };
      };
    };
  };
  "/api/Tenants/current": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Tenant"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
        /** Not Found */
        404: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Tenants/current/memberships": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["UserInfoPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["UserInfo"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateTenantMembershipDto"];
          "text/json": components["schemas"]["CreateTenantMembershipDto"];
          "application/*+json": components["schemas"]["CreateTenantMembershipDto"];
        };
      };
    };
  };
  "/api/Tenants/hosting": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Hosting"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Tenants/memberships": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Tenant"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Touchpoints": {
    get: {
      parameters: {
        query: {
          page?: number;
          term?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["TouchpointPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Touchpoint"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateTouchpointMetadata"];
          "text/json": components["schemas"]["CreateTouchpointMetadata"];
          "application/*+json": components["schemas"]["CreateTouchpointMetadata"];
        };
      };
    };
  };
  "/api/Touchpoints/{id}/TrackedUsers": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          page?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["TrackedUserPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Touchpoints/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Touchpoint"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["DeleteResponse"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Touchpoints/{id}/name": {
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          name?: string;
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Touchpoint"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/Touchpoints/{id}/Properties": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": { [key: string]: unknown };
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": { [key: string]: unknown };
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": { [key: string]: unknown };
          "text/json": { [key: string]: unknown };
          "application/*+json": { [key: string]: unknown };
        };
      };
    };
  };
  "/api/TrackedUsers/{id}/action-groups": {
    get: {
      parameters: {
        query: {
          page?: number;
          useInternalId?: boolean;
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ActionCategoryAndNamePaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/TrackedUsers/{id}/actions/{category}": {
    get: {
      parameters: {
        path: {
          id: string;
          category: string;
        };
        query: {
          actionName?: string;
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["TrackedUserAction"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/TrackedUsers/{id}/actions": {
    get: {
      parameters: {
        query: {
          page?: number;
          revenueOnly?: boolean;
          useInternalId?: boolean;
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["TrackedUserActionPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/trackedusers/{id}/features": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Feature"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/trackedusers/{id}/features/{featureCommonId}": {
    get: {
      parameters: {
        path: {
          id: string;
          featureCommonId: string;
        };
        query: {
          useInternalId?: boolean;
          version?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["HistoricTrackedUserFeature"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
          featureCommonId: string;
        };
        query: {
          useInternalId?: boolean;
          forceIncrementVersion?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["HistoricTrackedUserFeature"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateTrackedUserFeature"];
          "text/json": components["schemas"]["CreateTrackedUserFeature"];
          "application/*+json": components["schemas"]["CreateTrackedUserFeature"];
        };
      };
    };
  };
  "/api/TrackedUsers/{id}/latest-recommendations": {
    get: {
      parameters: {
        query: {
          page?: number;
          useInternalId?: boolean;
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["ObjectPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/TrackedUsers/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["TrackedUser"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["DeleteResponse"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/TrackedUsers/{id}/events": {
    get: {
      parameters: {
        query: {
          page?: number;
          useInternalId?: boolean;
        };
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["TrackedUserEventPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/TrackedUsers/{id}/properties": {
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": { [key: string]: unknown };
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": { [key: string]: unknown };
          "text/json": { [key: string]: unknown };
          "application/*+json": { [key: string]: unknown };
        };
      };
    };
  };
  "/api/TrackedUsers": {
    get: {
      parameters: {
        query: {
          page?: number;
          term?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["TrackedUserPaginated"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    put: {
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["BatchCreateOrUpdateUsersDto"];
          "text/json": components["schemas"]["BatchCreateOrUpdateUsersDto"];
          "application/*+json": components["schemas"]["BatchCreateOrUpdateUsersDto"];
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateOrUpdateTrackedUserDto"];
          "text/json": components["schemas"]["CreateOrUpdateTrackedUserDto"];
          "application/*+json": components["schemas"]["CreateOrUpdateTrackedUserDto"];
        };
      };
    };
  };
  "/api/TrackedUsers/{id}/name": {
    post: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          name?: string;
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["TrackedUser"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/TrackedUsers/{id}/Properties": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": { [key: string]: unknown };
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/trackedusers/{id}/touchpoints": {
    get: {
      parameters: {
        path: {
          id: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["Touchpoint"][];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
  "/api/trackedusers/{id}/touchpoints/{touchpointCommonId}": {
    get: {
      parameters: {
        path: {
          id: string;
          touchpointCommonId: string;
        };
        query: {
          useInternalId?: boolean;
          version?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["TrackedUserTouchpoint"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          id: string;
          touchpointCommonId: string;
        };
        query: {
          useInternalId?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "application/json": components["schemas"]["TrackedUserTouchpoint"];
          };
        };
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["CreateTrackedUserTouchpoint"];
          "text/json": components["schemas"]["CreateTrackedUserTouchpoint"];
          "application/*+json": components["schemas"]["CreateTrackedUserTouchpoint"];
        };
      };
    };
  };
  "/api/Webhooks/receivers/{endpointId}": {
    post: {
      parameters: {
        path: {
          endpointId: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
        /** Bad Request */
        400: {
          content: {
            "application/json": components["schemas"]["ProblemDetails"];
          };
        };
      };
    };
  };
}

export interface components {
  schemas: {
    ActionCategoryAndName: {
      category?: string | null;
      actionName?: string | null;
    };
    ActionCategoryAndNamePaginated: {
      items?: components["schemas"]["ActionCategoryAndName"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    AddItemDto: {
      id?: number | null;
      commonId?: string | null;
    };
    AggregateStep: {
      aggregationType?: components["schemas"]["AggregationTypes"];
    };
    AggregationTypes: "sum" | "mean";
    ApiKeyDto: {
      id?: number;
      name?: string | null;
      lastExchanged?: string | null;
      totalExchanges?: number;
      apiKeyType?: components["schemas"]["ApiKeyTypes"];
    };
    ApiKeyDtoPaginated: {
      items?: components["schemas"]["ApiKeyDto"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    ApiKeyExchangeRequestDto: {
      apiKey: string;
    };
    ApiKeyExchangeResponseDto: {
      access_token?: string | null;
    };
    ApiKeyTypes: "server" | "web";
    ArgumentTypes: "numerical" | "categorical";
    AzureMLClassifierOutput: {
      result?: string | null;
      correlatorId?: number | null;
    };
    AzureMLModelInput: {
      version?: string | null;
      data?: { [key: string]: unknown }[] | null;
      commonUserId?: string | null;
      arguments?: { [key: string]: unknown } | null;
      features?: { [key: string]: unknown } | null;
      parameterBounds?: components["schemas"]["ParameterBounds"][] | null;
    };
    BatchCreateOrUpdateUsersDto: {
      users: components["schemas"]["CreateOrUpdateTrackedUserDto"][];
    };
    Bearer: {
      name?: string | null;
      in?: string | null;
      description?: string | null;
      schema?: components["schemas"]["Schema"];
      type?: string | null;
    };
    CategoricalParameterBounds: {
      categories?: string[] | null;
    };
    CreateApiKeyDto: {
      name: string;
      apiKeyType: string;
      scope?: string | null;
    };
    CreateApiKeyResponseDto: {
      name?: string | null;
      apiKey?: string | null;
    };
    CreateDestinationDto: {
      destinationType: string;
      integratedSystemId: number;
      endpoint?: string | null;
      propertyName?: string | null;
    };
    CreateEnvironment: {
      name: string;
    };
    CreateFeatureGenerator: {
      featureCommonId: string;
      generatorType?: string | null;
      steps?: components["schemas"]["FilterSelectAggregateStepDto"][] | null;
    };
    CreateFeatureMetadata: {
      commonId: string;
      name?: string | null;
    };
    CreateIntegratedSystemDto: {
      name: string;
      systemType: string;
    };
    CreateItemsRecommender: {
      commonId: string;
      name: string;
      cloneFromId?: number | null;
      /** @deprecated */
      throwOnBadInput?: boolean | null;
      /** @deprecated */
      requireConsumptionEvent?: boolean | null;
      settings?: components["schemas"]["RecommenderSettingsDto"];
      arguments?:
        | components["schemas"]["CreateOrUpdateRecommenderArgument"][]
        | null;
      itemIds?: string[] | null;
      defaultItemId: string;
      numberOfItemsToRecommend?: number | null;
      useAutoAi?: boolean | null;
    };
    CreateOrUpdateRecommenderArgument: {
      commonId: string;
      argumentType?: components["schemas"]["ArgumentTypes"];
      defaultValue?: string | null;
      isRequired?: boolean;
    };
    CreateOrUpdateTrackedUserDto: {
      commonUserId: string;
      name?: string | null;
      properties?: { [key: string]: unknown } | null;
      integratedSystemReference?: components["schemas"]["IntegratedSystemReference"];
    };
    CreateParameter: {
      commonId: string;
      name?: string | null;
      /** One of Categorical or Numeric */
      parameterType?: string | null;
      description?: string | null;
      defaultValue?: unknown | null;
    };
    CreateParameterSetRecommender: {
      commonId: string;
      name: string;
      cloneFromId?: number | null;
      /** @deprecated */
      throwOnBadInput?: boolean | null;
      /** @deprecated */
      requireConsumptionEvent?: boolean | null;
      settings?: components["schemas"]["RecommenderSettingsDto"];
      arguments?:
        | components["schemas"]["CreateOrUpdateRecommenderArgument"][]
        | null;
      parameters?: string[] | null;
      bounds?: components["schemas"]["ParameterBounds"][] | null;
    };
    CreateProductDto: {
      commonId: string;
      name?: string | null;
      listPrice: number;
      directCost?: number | null;
      description?: string | null;
      properties?: { [key: string]: unknown } | null;
    };
    CreateProductRecommender: {
      commonId: string;
      name: string;
      cloneFromId?: number | null;
      /** @deprecated */
      throwOnBadInput?: boolean | null;
      /** @deprecated */
      requireConsumptionEvent?: boolean | null;
      settings?: components["schemas"]["RecommenderSettingsDto"];
      arguments?:
        | components["schemas"]["CreateOrUpdateRecommenderArgument"][]
        | null;
      productIds?: string[] | null;
      defaultProductId?: string | null;
    };
    CreateRecommendableItemDto: {
      commonId: string;
      name?: string | null;
      listPrice: number;
      directCost?: number | null;
      description?: string | null;
      properties?: { [key: string]: unknown } | null;
    };
    CreateRewardSelectorDto: {
      category?: string | null;
      actionName: string;
      selectorType: string;
    };
    CreateSegmentDto: {
      name?: string | null;
    };
    CreateTargetVariableValue: {
      start: string;
      end: string;
      name: string;
      value: number;
    };
    CreateTenantMembershipDto: {
      email: string;
    };
    CreateTouchpointMetadata: {
      /** Set a unique Id for the touchpoint. */
      commonId: string;
      /** Optional friendly name of the touchpoint. */
      name?: string | null;
    };
    CreateTrackedUserFeature: {
      value: unknown;
    };
    CreateTrackedUserTouchpoint: {
      values: { [key: string]: unknown };
    };
    Data: {
      type?: string | null;
      items?: components["schemas"]["DataItems"];
    };
    DataItems: {
      type?: string | null;
      required?: string[] | null;
      properties?: components["schemas"]["ItemsProperties"];
    };
    Default: {
      description?: string | null;
      schema?: components["schemas"]["Schema"];
    };
    DefaultArgumentContainer: {
      argumentType?: components["schemas"]["ArgumentTypes"];
      value?: unknown | null;
    };
    DefaultItemDto: {
      itemId?: string | null;
    };
    DefaultParameterValue: {
      parameterType?: components["schemas"]["ParameterTypes"];
      value?: unknown | null;
    };
    DefaultProductDto: {
      productId?: string | null;
    };
    Definitions: {
      ServiceInput?: components["schemas"]["ServiceInput"];
      ServiceOutput?: components["schemas"]["ServiceOutput"];
      ErrorResponse?: components["schemas"]["ErrorResponse"];
    };
    DeleteResponse: {
      id?: number;
      resouceUrl?: string | null;
      success?: boolean;
    };
    DestinationTrigger: { [key: string]: unknown };
    Empty: {
      get?: components["schemas"]["Get"];
    };
    Environment: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      name?: string | null;
    };
    EnvironmentPaginated: {
      items?: components["schemas"]["Environment"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    ErrorResponse: {
      type?: string | null;
      properties?: components["schemas"]["ErrorResponseProperties"];
    };
    ErrorResponseProperties: {
      status_code?: components["schemas"]["StatusCodeClass"];
      message?: components["schemas"]["Message"];
    };
    EventCountTimeline: {
      categories?: string[] | null;
      moments?: components["schemas"]["MomentCount"][] | null;
      categoricalMoments?: { [key: string]: unknown }[] | null;
    };
    EventDto: {
      commonUserId: string;
      eventId: string;
      timestamp?: string | null;
      recommendationCorrelatorId?: number | null;
      sourceSystemId?: number | null;
      kind?: string | null;
      eventType: string;
      properties?: { [key: string]: unknown } | null;
    };
    EventKinds:
      | "custom"
      | "propertyUpdate"
      | "behaviour"
      | "consumeRecommendation";
    EventKindSummary: {
      keys?: string[] | null;
      instanceCount?: number;
      eventTypes?: {
        [key: string]: components["schemas"]["EventStats"];
      } | null;
    };
    EventLoggingResponse: {
      eventsProcessed?: number;
      actionsProcessed?: number;
      eventsEnqueued?: number;
    };
    EventStats: {
      instances?: number;
      trackedUsers?: number;
      fractionOfKind?: number;
    };
    Examples: {
      "application/json"?: string | null;
    };
    Feature: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      name?: string | null;
      environmentId?: number | null;
      environment?: components["schemas"]["Environment"];
      commonId?: string | null;
      properties?: { [key: string]: unknown } | null;
    };
    FeatureDestinationBase: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      properties?: { [key: string]: string } | null;
      destinationType?: string | null;
      feature?: components["schemas"]["Feature"];
      connectedSystemId?: number;
      connectedSystem?: components["schemas"]["IntegratedSystem"];
      discriminator?: string | null;
    };
    FeatureGenerator: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      lastEnqueued?: string | null;
      lastCompleted?: string | null;
      featureId?: number;
      feature?: components["schemas"]["Feature"];
      generatorType?: components["schemas"]["FeatureGeneratorTypes"];
      filterSelectAggregateSteps?:
        | components["schemas"]["FilterSelectAggregateStep"][]
        | null;
    };
    FeatureGeneratorPaginated: {
      items?: components["schemas"]["FeatureGenerator"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    FeatureGeneratorRunSummary: {
      enqueued?: boolean | null;
      totalWrites?: number | null;
      maxSubsetSize?: number | null;
    };
    FeatureGeneratorTypes: "monthsSinceEarliestEvent" | "filterSelectAggregate";
    FeaturePaginated: {
      items?: components["schemas"]["Feature"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    FeaturesChangedTrigger: {
      name: string;
      featureCommonIds?: string[] | null;
    };
    FileInformation: {
      name?: string | null;
    };
    FilterSelectAggregateStep: {
      order?: number;
      filter?: components["schemas"]["FilterStep"];
      select?: components["schemas"]["SelectStep"];
      aggregate?: components["schemas"]["AggregateStep"];
    };
    FilterSelectAggregateStepDto: {
      type: string;
      order: number;
      eventTypeMatch?: string | null;
      propertyNameMatch?: string | null;
      aggregationType?: string | null;
    };
    FilterStep: {
      eventTypeMatch?: string | null;
    };
    Get: {
      operationId?: string | null;
      description?: string | null;
      responses?: components["schemas"]["GetResponses"];
    };
    GetResponses: {
      "200"?: components["schemas"]["The200"];
      default?: components["schemas"]["Default"];
    };
    HistoricTrackedUserFeature: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      trackedUserId?: number;
      trackedUser?: components["schemas"]["TrackedUser"];
      featureId?: number;
      feature?: components["schemas"]["Feature"];
      numericValue?: number | null;
      stringValue?: string | null;
      value?: unknown | null;
      version?: number;
    };
    HistoricTrackedUserFeaturePaginated: {
      items?: components["schemas"]["HistoricTrackedUserFeature"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    Hosting: {
      multitenant?: boolean;
      canonicalRootDomain?: string | null;
    };
    HostingTypes:
      | "azureMLContainerInstance"
      | "azurePersonalizer"
      | "azureFunctions";
    Info: {
      title?: string | null;
      description?: string | null;
      version?: string | null;
    };
    IntegratedSystem: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      name?: string | null;
      environmentId?: number | null;
      environment?: components["schemas"]["Environment"];
      commonId?: string | null;
      properties?: { [key: string]: unknown } | null;
      systemType?: components["schemas"]["IntegratedSystemTypes"];
      integrationStatus?: components["schemas"]["IntegrationStatuses"];
      tokenResponseUpdated?: string | null;
      discriminator?: string | null;
    };
    IntegratedSystemPaginated: {
      items?: components["schemas"]["IntegratedSystem"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    /** Links a user to an existing Integrated System resource. */
    IntegratedSystemReference: {
      /** The SignalBox Identifier of the integrated system. */
      integratedSystemId: number;
      /** The unqiue User Id in the external system, e.g. Hubspot Contact Id. */
      userId: string;
    };
    IntegratedSystemTypes: "segment" | "hubspot" | "custom";
    IntegrationStatuses: "notConfigured" | "ok";
    InvokationLogEntry: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      status?: string | null;
      recommenderType?: string | null;
      recommenderId?: number;
      success?: boolean | null;
      modelResponse?: string | null;
      /** @deprecated */
      message?: string | null;
      messages?: string[] | null;
      invokeStarted?: string;
      invokeEnded?: string | null;
      correlatorId?: number | null;
      correlator?: components["schemas"]["RecommendationCorrelator"];
      trackedUserId?: number | null;
      trackedUser?: components["schemas"]["TrackedUser"];
    };
    InvokationLogEntryPaginated: {
      items?: components["schemas"]["InvokationLogEntry"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    ItemsProperties: {
      Column2?: components["schemas"]["Message"];
      A?: components["schemas"]["StatusCodeClass"];
      B?: components["schemas"]["StatusCodeClass"];
    };
    ItemsRecommendation: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      recommenderType?: components["schemas"]["RecommenderTypes"];
      trackedUserId?: number | null;
      trackedUser?: components["schemas"]["TrackedUser"];
      trigger?: string | null;
      recommendationCorrelatorId?: number | null;
      modelInput?: string | null;
      modelInputType?: string | null;
      modelOutput?: string | null;
      modelOutputType?: string | null;
      isFromCache?: boolean;
      recommenderId?: number | null;
      recommender?: components["schemas"]["ItemsRecommender"];
      scoredItems?: components["schemas"]["ScoredRecommendableItem"][] | null;
    };
    ItemsRecommendationDto: {
      created?: string;
      correlatorId?: number | null;
      commonUserId?: string | null;
      scoredItems?: components["schemas"]["ScoredRecommendableItem"][] | null;
      customer?: components["schemas"]["TrackedUser"];
      trigger?: string | null;
    };
    ItemsRecommendationPaginated: {
      items?: components["schemas"]["ItemsRecommendation"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    ItemsRecommender: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      name?: string | null;
      environmentId?: number | null;
      environment?: components["schemas"]["Environment"];
      commonId?: string | null;
      properties?: { [key: string]: unknown } | null;
      errorHandling?: components["schemas"]["RecommenderErrorHandling"];
      settings?: components["schemas"]["RecommenderSettings"];
      arguments?: components["schemas"]["RecommenderArgument"][] | null;
      triggerCollection?: components["schemas"]["TriggerCollection"];
      modelRegistrationId?: number | null;
      modelRegistration?: components["schemas"]["ModelRegistration"];
      defaultItemId?: number | null;
      defaultItem?: components["schemas"]["RecommendableItem"];
      numberOfItemsToRecommend?: number | null;
      items?: components["schemas"]["RecommendableItem"][] | null;
    };
    ItemsRecommenderPaginated: {
      items?: components["schemas"]["ItemsRecommender"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    LinkModel: {
      modelId?: number;
    };
    Message: {
      type?: string | null;
    };
    ModelInputDto: {
      commonUserId: string;
      arguments?: { [key: string]: unknown } | null;
      features?: { [key: string]: unknown } | null;
      parameterBounds?: components["schemas"]["ParameterBounds"][] | null;
    };
    ModelRegistration: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      name?: string | null;
      modelType?: components["schemas"]["ModelTypes"];
      hostingType?: components["schemas"]["HostingTypes"];
      scoringUrl?: string | null;
      swagger?: components["schemas"]["SwaggerDefinition"];
    };
    ModelRegistrationPaginated: {
      items?: components["schemas"]["ModelRegistration"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    ModelTypes:
      | "singleClassClassifier"
      | "parameterSetRecommenderV1"
      | "productRecommenderV1"
      | "itemsRecommenderV1";
    MomentCount: {
      category?: string | null;
      timestamp?: string;
      unixTime?: number;
      count?: number;
    };
    NewTenantDto: {
      name: string;
      termsOfServiceVersion: string;
    };
    NextPageInfo: {
      after?: string | null;
    };
    NumericalParameterBounds: {
      min?: number;
      max?: number;
    };
    ObjectPaginated: {
      items?: unknown[] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    OpenApiSecurity: {
      Bearer?: unknown[] | null;
    };
    PaginationInfo: {
      pageCount?: number;
      totalItemCount?: number;
      pageNumber?: number;
      hasPreviousPage?: boolean;
      hasNextPage?: boolean;
      isFirstPage?: boolean;
      isLastPage?: boolean;
      next?: components["schemas"]["NextPageInfo"];
    };
    Parameter: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      name?: string | null;
      environmentId?: number | null;
      environment?: components["schemas"]["Environment"];
      commonId?: string | null;
      properties?: { [key: string]: unknown } | null;
      parameterType?: components["schemas"]["ParameterTypes"];
      defaultValue?: components["schemas"]["DefaultParameterValue"];
      default?: unknown | null;
      description?: string | null;
    };
    ParameterBounds: {
      commonId?: string | null;
      numericBounds?: components["schemas"]["NumericalParameterBounds"];
      categoricalBounds?: components["schemas"]["CategoricalParameterBounds"];
    };
    ParameterPaginated: {
      items?: components["schemas"]["Parameter"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    ParameterSetRecommendation: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      recommenderType?: components["schemas"]["RecommenderTypes"];
      trackedUserId?: number | null;
      trackedUser?: components["schemas"]["TrackedUser"];
      trigger?: string | null;
      recommendationCorrelatorId?: number | null;
      modelInput?: string | null;
      modelInputType?: string | null;
      modelOutput?: string | null;
      modelOutputType?: string | null;
      isFromCache?: boolean;
      recommenderId?: number | null;
      recommender?: components["schemas"]["ParameterSetRecommender"];
    };
    ParameterSetRecommendationDto: {
      created?: string;
      correlatorId?: number | null;
      recommendedParameters?: { [key: string]: unknown } | null;
      commonUserId?: string | null;
      customer?: components["schemas"]["TrackedUser"];
      trigger?: string | null;
    };
    ParameterSetRecommendationPaginated: {
      items?: components["schemas"]["ParameterSetRecommendation"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    ParameterSetRecommender: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      name?: string | null;
      environmentId?: number | null;
      environment?: components["schemas"]["Environment"];
      commonId?: string | null;
      properties?: { [key: string]: unknown } | null;
      errorHandling?: components["schemas"]["RecommenderErrorHandling"];
      settings?: components["schemas"]["RecommenderSettings"];
      arguments?: components["schemas"]["RecommenderArgument"][] | null;
      triggerCollection?: components["schemas"]["TriggerCollection"];
      modelRegistrationId?: number | null;
      modelRegistration?: components["schemas"]["ModelRegistration"];
      parameters?: components["schemas"]["Parameter"][] | null;
      parameterBounds?: components["schemas"]["ParameterBounds"][] | null;
    };
    ParameterSetRecommenderPaginated: {
      items?: components["schemas"]["ParameterSetRecommender"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    ParameterTypes: "numerical" | "categorical";
    Paths: {
      "/"?: components["schemas"]["Empty"];
      "/score"?: components["schemas"]["Score"];
    };
    Post: {
      operationId?: string | null;
      description?: string | null;
      security?: components["schemas"]["OpenApiSecurity"][] | null;
      parameters?: components["schemas"]["Bearer"][] | null;
      responses?: components["schemas"]["PostResponses"];
    };
    PostResponses: {
      "200"?: components["schemas"]["Default"];
      default?: components["schemas"]["Default"];
    };
    ProblemDetails: {
      type?: string | null;
      title?: string | null;
      status?: number | null;
      detail?: string | null;
      instance?: string | null;
    } & { [key: string]: unknown };
    Product: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      name?: string | null;
      environmentId?: number | null;
      environment?: components["schemas"]["Environment"];
      commonId?: string | null;
      properties?: { [key: string]: unknown } | null;
      listPrice?: number | null;
      directCost?: number | null;
      description?: string | null;
    };
    ProductPaginated: {
      items?: components["schemas"]["Product"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    ProductRecommendation: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      recommenderType?: components["schemas"]["RecommenderTypes"];
      trackedUserId?: number | null;
      trackedUser?: components["schemas"]["TrackedUser"];
      trigger?: string | null;
      recommendationCorrelatorId?: number | null;
      modelInput?: string | null;
      modelInputType?: string | null;
      modelOutput?: string | null;
      modelOutputType?: string | null;
      isFromCache?: boolean;
      recommenderId?: number | null;
      recommender?: components["schemas"]["ProductRecommender"];
      product?: components["schemas"]["Product"];
    };
    ProductRecommendationPaginated: {
      items?: components["schemas"]["ProductRecommendation"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    ProductRecommender: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      name?: string | null;
      environmentId?: number | null;
      environment?: components["schemas"]["Environment"];
      commonId?: string | null;
      properties?: { [key: string]: unknown } | null;
      errorHandling?: components["schemas"]["RecommenderErrorHandling"];
      settings?: components["schemas"]["RecommenderSettings"];
      arguments?: components["schemas"]["RecommenderArgument"][] | null;
      triggerCollection?: components["schemas"]["TriggerCollection"];
      modelRegistrationId?: number | null;
      modelRegistration?: components["schemas"]["ModelRegistration"];
      defaultProductId?: number | null;
      defaultProduct?: components["schemas"]["Product"];
      products?: components["schemas"]["Product"][] | null;
    };
    ProductRecommenderInput: {
      commonUserId: string;
      arguments?: { [key: string]: unknown } | null;
    };
    ProductRecommenderModelOutputV1: {
      productId?: number | null;
      productCommonId?: string | null;
      product?: components["schemas"]["Product"];
      correlatorId?: number | null;
    };
    ProductRecommenderPaginated: {
      items?: components["schemas"]["ProductRecommender"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    RecommendableItem: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      name?: string | null;
      environmentId?: number | null;
      environment?: components["schemas"]["Environment"];
      commonId?: string | null;
      properties?: { [key: string]: unknown } | null;
      listPrice?: number | null;
      directCost?: number | null;
      description?: string | null;
    };
    RecommendableItemPaginated: {
      items?: components["schemas"]["RecommendableItem"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    RecommendationCorrelator: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      recommenderId?: number | null;
      recommender?: components["schemas"]["RecommenderEntityBase"];
      trackedUserActions?: components["schemas"]["TrackedUserAction"][] | null;
      modelRegistrationId?: number | null;
      modelRegistration?: components["schemas"]["ModelRegistration"];
    };
    RecommendationDestinationBase: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      properties?: { [key: string]: string } | null;
      destinationType?: string | null;
      recommender?: components["schemas"]["RecommenderEntityBase"];
      trigger?: components["schemas"]["DestinationTrigger"];
      connectedSystemId?: number;
      connectedSystem?: components["schemas"]["IntegratedSystem"];
      discriminator?: string | null;
    };
    RecommenderArgument: {
      commonId?: string | null;
      argumentType?: components["schemas"]["ArgumentTypes"];
      defaultValue?: components["schemas"]["DefaultArgumentContainer"];
      defaultArgumentValue?: unknown | null;
      isRequired?: boolean;
    };
    RecommenderEntityBase: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      name?: string | null;
      environmentId?: number | null;
      environment?: components["schemas"]["Environment"];
      commonId?: string | null;
      properties?: { [key: string]: unknown } | null;
      errorHandling?: components["schemas"]["RecommenderErrorHandling"];
      settings?: components["schemas"]["RecommenderSettings"];
      arguments?: components["schemas"]["RecommenderArgument"][] | null;
      triggerCollection?: components["schemas"]["TriggerCollection"];
      modelRegistrationId?: number | null;
      modelRegistration?: components["schemas"]["ModelRegistration"];
    };
    RecommenderErrorHandling: {
      throwOnBadInput?: boolean | null;
      requireConsumptionEvent?: boolean | null;
      recommendationCacheTime?: components["schemas"]["TimeSpan"];
    };
    RecommenderSettings: {
      throwOnBadInput?: boolean | null;
      requireConsumptionEvent?: boolean | null;
      recommendationCacheTime?: components["schemas"]["TimeSpan"];
    };
    RecommenderSettingsDto: {
      throwOnBadInput?: boolean | null;
      requireConsumptionEvent?: boolean | null;
      recommendationCacheTime?: components["schemas"]["TimeSpan"];
    };
    RecommenderTargetVariableValue: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      recommenderId?: number;
      version?: number;
      start?: string;
      end?: string;
      name?: string | null;
      value?: number;
    };
    RecommenderTypes: "product" | "parameterSet" | "items" | "offer";
    RegisterNewModelDto: {
      name: string;
      scoringUrl: string;
      key: string;
      swaggerUrl?: string | null;
      modelType: string;
      hostingType: string;
    };
    RewardSelector: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      category?: string | null;
      actionName?: string | null;
      selectorType?: components["schemas"]["SelectorTypes"];
    };
    RewardSelectorPaginated: {
      items?: components["schemas"]["RewardSelector"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    Schema: {
      $ref?: string | null;
    };
    Score: {
      post?: components["schemas"]["Post"];
    };
    ScoredRecommendableItem: {
      itemId?: number | null;
      itemCommonId?: string | null;
      commonId?: string | null;
      item?: components["schemas"]["RecommendableItem"];
      score?: number | null;
    };
    SecurityDefinitions: {
      Bearer?: components["schemas"]["Bearer"];
    };
    Segment: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      name?: string | null;
      environmentId?: number | null;
      environment?: components["schemas"]["Environment"];
      inSegment?: components["schemas"]["TrackedUser"][] | null;
    };
    SegmentPaginated: {
      items?: components["schemas"]["Segment"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    SelectorTypes: "revenue";
    SelectStep: {
      propertyNameMatch?: string | null;
    };
    ServiceInput: {
      type?: string | null;
      properties?: components["schemas"]["ServiceInputProperties"];
      example?: components["schemas"]["AzureMLModelInput"];
    };
    ServiceInputProperties: {
      data?: components["schemas"]["Data"];
    };
    ServiceOutput: {
      type?: string | null;
      items?: components["schemas"]["StatusCodeClass"];
      example?: number[] | null;
    };
    SetLearningFeatures: {
      useInternalId?: boolean | null;
      featureIds?: string[] | null;
    };
    SetTriggersDto: {
      featuresChanged?: components["schemas"]["FeaturesChangedTrigger"];
    };
    StatusCodeClass: {
      type?: string | null;
      format?: string | null;
    };
    StatusDto: {
      status?: string | null;
    };
    StringPaginated: {
      items?: string[] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    SwaggerDefinition: {
      swagger?: string | null;
      info?: components["schemas"]["Info"];
      schemes?: string[] | null;
      consumes?: string[] | null;
      produces?: string[] | null;
      securityDefinitions?: components["schemas"]["SecurityDefinitions"];
      paths?: components["schemas"]["Paths"];
      definitions?: components["schemas"]["Definitions"];
    };
    Tenant: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      name?: string | null;
      databaseName?: string | null;
      status?: string | null;
    };
    The200: {
      description?: string | null;
      schema?: components["schemas"]["Message"];
      examples?: components["schemas"]["Examples"];
    };
    TimeSpan: {
      ticks?: number;
      days?: number;
      hours?: number;
      milliseconds?: number;
      minutes?: number;
      seconds?: number;
      totalDays?: number;
      totalHours?: number;
      totalMilliseconds?: number;
      totalMinutes?: number;
      totalSeconds?: number;
    };
    Touchpoint: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      name?: string | null;
      environmentId?: number | null;
      environment?: components["schemas"]["Environment"];
      commonId?: string | null;
      properties?: { [key: string]: unknown } | null;
    };
    TouchpointPaginated: {
      items?: components["schemas"]["Touchpoint"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    TrackedUser: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      name?: string | null;
      environmentId?: number | null;
      environment?: components["schemas"]["Environment"];
      commonId?: string | null;
      properties?: { [key: string]: unknown } | null;
      commonUserId?: string | null;
      integratedSystemMaps?:
        | components["schemas"]["TrackedUserSystemMap"][]
        | null;
    };
    TrackedUserAction: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      trackedUserId?: number | null;
      trackedUser?: components["schemas"]["TrackedUser"];
      commonUserId?: string | null;
      eventId?: string | null;
      timestamp?: string;
      recommendationCorrelatorId?: number | null;
      recommendationCorrelator?: components["schemas"]["RecommendationCorrelator"];
      integratedSystemId?: number | null;
      category?: string | null;
      actionName?: string | null;
      actionValue?: string | null;
      valueType?: components["schemas"]["TrackedUserActionValueType"];
      trackedUserEventId?: number | null;
      feedbackScore?: number | null;
      associatedRevenue?: number | null;
    };
    TrackedUserActionPaginated: {
      items?: components["schemas"]["TrackedUserAction"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    TrackedUserActionValueType: "string" | "float" | "int";
    TrackedUserEvent: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      commonUserId?: string | null;
      eventId?: string | null;
      timestamp?: string;
      recommendationCorrelatorId?: number | null;
      recommendationCorrelator?: components["schemas"]["RecommendationCorrelator"];
      source?: components["schemas"]["IntegratedSystem"];
      eventKind?: components["schemas"]["EventKinds"];
      kind?: string | null;
      eventType?: string | null;
      properties?: { [key: string]: unknown } | null;
      trackedUserId?: number | null;
      trackedUser?: components["schemas"]["TrackedUser"];
      actions?: components["schemas"]["TrackedUserAction"][] | null;
    };
    TrackedUserEventPaginated: {
      items?: components["schemas"]["TrackedUserEvent"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    TrackedUserEventSummary: {
      keys?: string[] | null;
      kinds?: {
        [key: string]: components["schemas"]["EventKindSummary"];
      } | null;
    };
    TrackedUserPaginated: {
      items?: components["schemas"]["TrackedUser"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    TrackedUserSystemMap: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      userId?: string | null;
      integratedSystemId?: number;
    };
    TrackedUserTouchpoint: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      version?: number;
      trackedUserId?: number;
      trackedUser?: components["schemas"]["TrackedUser"];
      touchpointId?: number;
      touchpoint?: components["schemas"]["Touchpoint"];
      values?: { [key: string]: unknown } | null;
    };
    TriggerCollection: {
      featuresChanged?: components["schemas"]["FeaturesChangedTrigger"];
    };
    UpdateRecommendableItem: {
      name: string;
      listPrice: number;
      directCost?: number | null;
      description?: string | null;
      properties?: { [key: string]: unknown } | null;
    };
    UserInfo: {
      email?: string | null;
      emailVerified?: boolean | null;
      userId?: string | null;
      invitationUrl?: string | null;
    };
    UserInfoPaginated: {
      items?: components["schemas"]["UserInfo"][] | null;
      pagination?: components["schemas"]["PaginationInfo"];
    };
    WebhookReceiver: {
      id?: number;
      created?: string;
      lastUpdated?: string;
      endpointId?: string | null;
      sharedSecret?: string | null;
    };
  };
}

export interface operations {}

export interface external {}
