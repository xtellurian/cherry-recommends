# Cherry Docs Pipeline

trigger:
  batch: true
  branches:
    include:
      - main
      - develop/*
      - docs/*
  paths:
    include:
      - docs/*

pool:
  vmImage: ubuntu-latest

jobs:
  - job: build_docs
    displayName: Build Docs
    continueOnError: false
    variables:
      - group: Azure_Docs_Prod
    steps:
      - script: npm i
        workingDirectory: docs/docusaurus
        displayName: "npm Install"

      - script: npm run build
        workingDirectory: docs/docusaurus
        displayName: "npm Builds"

      - task: PublishPipelineArtifact@1
        displayName: Publish docs Artifacts
        inputs:
          targetPath: $(System.DefaultWorkingDirectory)/docs/docusaurus/build
          artifactName: "docs"
      # run preview to check for changes upcoming
      - task: Pulumi@1
        condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest') )
        displayName: Pulumi Preview (cherry/docs)
        inputs:
          command: preview
          stack: cherry/docs
          cwd: $(WORKING_DIRECTORY_PULUMI)
          createStack: true

  - job: deploy_dev
    displayName: Deploy devdocs
    variables:
      - group: Azure_Docs_Dev
    continueOnError: false
    dependsOn: build_docs
    condition: |
      and(succeeded(), or(
      startsWith(variables['Build.SourceBranch'], 'refs/heads/develop/'), 
      startsWith(variables['Build.SourceBranch'], 'refs/heads/docs/')))
    steps:
      - script: az login --service-principal -u $(ARM_CLIENT_ID) -p $(ARM_CLIENT_SECRET) --tenant $(ARM_TENANT_ID)
        displayName: az login --service-principal

      - task: Pulumi@1
        displayName: Pulumi Up
        env:
          ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
          ARM_CLIENT_ID: $(ARM_CLIENT_ID)
          ARM_TENANT_ID: $(ARM_TENANT_ID)
        inputs:
          command: up
          args: --yes
          stack: $(DEV_PULUMI_STACK)
          cwd: $(WORKING_DIRECTORY_PULUMI)
          createStack: true

      - task: DownloadPipelineArtifact@2
        displayName: Download Published Build Artifacts
        inputs:
          artifact: "docs"
          path: $(System.DefaultWorkingDirectory)/docs/docusaurus/build/

      - script: |
          sh ./devops-deploy.sh
        workingDirectory: docs/scripts
        displayName: Deploy docs to Azure dev

  - job: deploy_prod
    displayName: Deploy prod docs
    variables:
      - group: Azure_Docs_Prod
    continueOnError: false
    dependsOn: build_docs
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    steps:
      - script: az login --service-principal -u $(ARM_CLIENT_ID) -p $(ARM_CLIENT_SECRET) --tenant $(ARM_TENANT_ID)
        displayName: az login --service-principal

      - task: Pulumi@1
        displayName: Pulumi Up
        env:
          ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
          ARM_CLIENT_ID: $(ARM_CLIENT_ID)
          ARM_TENANT_ID: $(ARM_TENANT_ID)
        inputs:
          command: up
          args: --yes
          stack: $(PROD_PULUMI_STACK)
          cwd: $(WORKING_DIRECTORY_PULUMI)
          createStack: false

      - task: DownloadPipelineArtifact@2
        displayName: Download Published Build Artifacts
        inputs:
          artifact: "docs"
          path: $(System.DefaultWorkingDirectory)/docs/docusaurus/build/

      - script: |
          sh ./devops-deploy.sh
        workingDirectory: docs/scripts
        displayName: Deploy docs to Azure Prod
